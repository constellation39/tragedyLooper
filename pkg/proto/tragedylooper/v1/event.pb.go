// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tragedylooper/v1/event.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GameEvent 表示游戏中发生的事件。
type GameEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          GameEventType          `protobuf:"varint,1,opt,name=type,proto3,enum=tragedylooper.v1.GameEventType" json:"type,omitempty"` // 事件类型
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                            // 事件发生的时间戳
	Payload       *EventPayload          `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Cause         *Cause                 `protobuf:"bytes,4,opt,name=cause,proto3,oneof" json:"cause,omitempty"` // 事件的起因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameEvent) Reset() {
	*x = GameEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent) ProtoMessage() {}

func (x *GameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent.ProtoReflect.Descriptor instead.
func (*GameEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *GameEvent) GetType() GameEventType {
	if x != nil {
		return x.Type
	}
	return GameEventType_GAME_EVENT_TYPE_UNSPECIFIED
}

func (x *GameEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GameEvent) GetPayload() *EventPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GameEvent) GetCause() *Cause {
	if x != nil {
		return x.Cause
	}
	return nil
}

// Cause 定义了事件的来源。
type Cause struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to CauseType:
	//
	//	*Cause_CardId
	//	*Cause_AbilityId
	//	*Cause_IncidentId
	CauseType     isCause_CauseType `protobuf_oneof:"cause_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cause) Reset() {
	*x = Cause{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cause) ProtoMessage() {}

func (x *Cause) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cause.ProtoReflect.Descriptor instead.
func (*Cause) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *Cause) GetCauseType() isCause_CauseType {
	if x != nil {
		return x.CauseType
	}
	return nil
}

func (x *Cause) GetCardId() int32 {
	if x != nil {
		if x, ok := x.CauseType.(*Cause_CardId); ok {
			return x.CardId
		}
	}
	return 0
}

func (x *Cause) GetAbilityId() int32 {
	if x != nil {
		if x, ok := x.CauseType.(*Cause_AbilityId); ok {
			return x.AbilityId
		}
	}
	return 0
}

func (x *Cause) GetIncidentId() int32 {
	if x != nil {
		if x, ok := x.CauseType.(*Cause_IncidentId); ok {
			return x.IncidentId
		}
	}
	return 0
}

type isCause_CauseType interface {
	isCause_CauseType()
}

type Cause_CardId struct {
	CardId int32 `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3,oneof"`
}

type Cause_AbilityId struct {
	AbilityId int32 `protobuf:"varint,2,opt,name=ability_id,json=abilityId,proto3,oneof"`
}

type Cause_IncidentId struct {
	IncidentId int32 `protobuf:"varint,3,opt,name=incident_id,json=incidentId,proto3,oneof"` // 也可以添加 GameEngineTick, PlayerChoice 等。
}

func (*Cause_CardId) isCause_CauseType() {}

func (*Cause_AbilityId) isCause_CauseType() {}

func (*Cause_IncidentId) isCause_CauseType() {}

type EventPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*EventPayload_CharacterMoved
	//	*EventPayload_StatAdjusted
	//	*EventPayload_LoopLoss
	//	*EventPayload_LoopWin
	//	*EventPayload_AbilityUsed
	//	*EventPayload_DayAdvanced
	//	*EventPayload_CardPlayed
	//	*EventPayload_CardRevealed
	//	*EventPayload_LoopReset
	//	*EventPayload_GameEnded
	//	*EventPayload_ChoiceRequired
	//	*EventPayload_IncidentTriggered
	//	*EventPayload_TragedyTriggered
	//	*EventPayload_TraitAdjusted
	//	*EventPayload_PlayerActionTaken
	Payload       isEventPayload_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPayload) Reset() {
	*x = EventPayload{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPayload) ProtoMessage() {}

func (x *EventPayload) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPayload.ProtoReflect.Descriptor instead.
func (*EventPayload) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventPayload) GetPayload() isEventPayload_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *EventPayload) GetCharacterMoved() *CharacterMovedEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_CharacterMoved); ok {
			return x.CharacterMoved
		}
	}
	return nil
}

func (x *EventPayload) GetStatAdjusted() *StatAdjustedEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_StatAdjusted); ok {
			return x.StatAdjusted
		}
	}
	return nil
}

func (x *EventPayload) GetLoopLoss() *LoopLossEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_LoopLoss); ok {
			return x.LoopLoss
		}
	}
	return nil
}

func (x *EventPayload) GetLoopWin() *LoopWinEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_LoopWin); ok {
			return x.LoopWin
		}
	}
	return nil
}

func (x *EventPayload) GetAbilityUsed() *AbilityUsedEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_AbilityUsed); ok {
			return x.AbilityUsed
		}
	}
	return nil
}

func (x *EventPayload) GetDayAdvanced() *DayAdvancedEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_DayAdvanced); ok {
			return x.DayAdvanced
		}
	}
	return nil
}

func (x *EventPayload) GetCardPlayed() *CardPlayedEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_CardPlayed); ok {
			return x.CardPlayed
		}
	}
	return nil
}

func (x *EventPayload) GetCardRevealed() *CardRevealedEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_CardRevealed); ok {
			return x.CardRevealed
		}
	}
	return nil
}

func (x *EventPayload) GetLoopReset() *LoopResetEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_LoopReset); ok {
			return x.LoopReset
		}
	}
	return nil
}

func (x *EventPayload) GetGameEnded() *GameEndedEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_GameEnded); ok {
			return x.GameEnded
		}
	}
	return nil
}

func (x *EventPayload) GetChoiceRequired() *ChoiceRequiredEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_ChoiceRequired); ok {
			return x.ChoiceRequired
		}
	}
	return nil
}

func (x *EventPayload) GetIncidentTriggered() *IncidentTriggeredEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_IncidentTriggered); ok {
			return x.IncidentTriggered
		}
	}
	return nil
}

func (x *EventPayload) GetTragedyTriggered() *TragedyTriggeredEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_TragedyTriggered); ok {
			return x.TragedyTriggered
		}
	}
	return nil
}

func (x *EventPayload) GetTraitAdjusted() *TraitAdjustedEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_TraitAdjusted); ok {
			return x.TraitAdjusted
		}
	}
	return nil
}

func (x *EventPayload) GetPlayerActionTaken() *PlayerActionTakenEvent {
	if x != nil {
		if x, ok := x.Payload.(*EventPayload_PlayerActionTaken); ok {
			return x.PlayerActionTaken
		}
	}
	return nil
}

type isEventPayload_Payload interface {
	isEventPayload_Payload()
}

type EventPayload_CharacterMoved struct {
	CharacterMoved *CharacterMovedEvent `protobuf:"bytes,1,opt,name=character_moved,json=characterMoved,proto3,oneof"`
}

type EventPayload_StatAdjusted struct {
	StatAdjusted *StatAdjustedEvent `protobuf:"bytes,2,opt,name=stat_adjusted,json=statAdjusted,proto3,oneof"` // 替换了妄想、好感、阴谋事件
}

type EventPayload_LoopLoss struct {
	LoopLoss *LoopLossEvent `protobuf:"bytes,5,opt,name=loop_loss,json=loopLoss,proto3,oneof"`
}

type EventPayload_LoopWin struct {
	LoopWin *LoopWinEvent `protobuf:"bytes,6,opt,name=loop_win,json=loopWin,proto3,oneof"`
}

type EventPayload_AbilityUsed struct {
	AbilityUsed *AbilityUsedEvent `protobuf:"bytes,7,opt,name=ability_used,json=abilityUsed,proto3,oneof"`
}

type EventPayload_DayAdvanced struct {
	DayAdvanced *DayAdvancedEvent `protobuf:"bytes,8,opt,name=day_advanced,json=dayAdvanced,proto3,oneof"`
}

type EventPayload_CardPlayed struct {
	CardPlayed *CardPlayedEvent `protobuf:"bytes,9,opt,name=card_played,json=cardPlayed,proto3,oneof"`
}

type EventPayload_CardRevealed struct {
	CardRevealed *CardRevealedEvent `protobuf:"bytes,10,opt,name=card_revealed,json=cardRevealed,proto3,oneof"`
}

type EventPayload_LoopReset struct {
	LoopReset *LoopResetEvent `protobuf:"bytes,11,opt,name=loop_reset,json=loopReset,proto3,oneof"`
}

type EventPayload_GameEnded struct {
	GameEnded *GameEndedEvent `protobuf:"bytes,12,opt,name=game_ended,json=gameEnded,proto3,oneof"`
}

type EventPayload_ChoiceRequired struct {
	ChoiceRequired *ChoiceRequiredEvent `protobuf:"bytes,13,opt,name=choice_required,json=choiceRequired,proto3,oneof"`
}

type EventPayload_IncidentTriggered struct {
	IncidentTriggered *IncidentTriggeredEvent `protobuf:"bytes,14,opt,name=incident_triggered,json=incidentTriggered,proto3,oneof"`
}

type EventPayload_TragedyTriggered struct {
	TragedyTriggered *TragedyTriggeredEvent `protobuf:"bytes,15,opt,name=tragedy_triggered,json=tragedyTriggered,proto3,oneof"`
}

type EventPayload_TraitAdjusted struct {
	TraitAdjusted *TraitAdjustedEvent `protobuf:"bytes,16,opt,name=trait_adjusted,json=traitAdjusted,proto3,oneof"` // 替换了特性添加、移除事件
}

type EventPayload_PlayerActionTaken struct {
	PlayerActionTaken *PlayerActionTakenEvent `protobuf:"bytes,18,opt,name=player_action_taken,json=playerActionTaken,proto3,oneof"`
}

func (*EventPayload_CharacterMoved) isEventPayload_Payload() {}

func (*EventPayload_StatAdjusted) isEventPayload_Payload() {}

func (*EventPayload_LoopLoss) isEventPayload_Payload() {}

func (*EventPayload_LoopWin) isEventPayload_Payload() {}

func (*EventPayload_AbilityUsed) isEventPayload_Payload() {}

func (*EventPayload_DayAdvanced) isEventPayload_Payload() {}

func (*EventPayload_CardPlayed) isEventPayload_Payload() {}

func (*EventPayload_CardRevealed) isEventPayload_Payload() {}

func (*EventPayload_LoopReset) isEventPayload_Payload() {}

func (*EventPayload_GameEnded) isEventPayload_Payload() {}

func (*EventPayload_ChoiceRequired) isEventPayload_Payload() {}

func (*EventPayload_IncidentTriggered) isEventPayload_Payload() {}

func (*EventPayload_TragedyTriggered) isEventPayload_Payload() {}

func (*EventPayload_TraitAdjusted) isEventPayload_Payload() {}

func (*EventPayload_PlayerActionTaken) isEventPayload_Payload() {}

// 角色移动事件
type CharacterMovedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`                                    // 移动的角色ID
	NewLocation   LocationType           `protobuf:"varint,2,opt,name=new_location,json=newLocation,proto3,enum=tragedylooper.v1.LocationType" json:"new_location,omitempty"` // 移动到的新地点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterMovedEvent) Reset() {
	*x = CharacterMovedEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterMovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterMovedEvent) ProtoMessage() {}

func (x *CharacterMovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterMovedEvent.ProtoReflect.Descriptor instead.
func (*CharacterMovedEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *CharacterMovedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *CharacterMovedEvent) GetNewLocation() LocationType {
	if x != nil {
		return x.NewLocation
	}
	return LocationType_LOCATION_TYPE_UNSPECIFIED
}

// 属性调整事件 (替代 Paranoia/Goodwill/IntrigueAdjustedEvent)
type StatAdjustedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	StatType      StatType               `protobuf:"varint,2,opt,name=stat_type,json=statType,proto3,enum=tragedylooper.v1.StatType" json:"stat_type,omitempty"` // 被改变的属性
	Amount        int32                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`                                                    // 调整量
	NewValue      int32                  `protobuf:"varint,4,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`                                // 调整后的新值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatAdjustedEvent) Reset() {
	*x = StatAdjustedEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatAdjustedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatAdjustedEvent) ProtoMessage() {}

func (x *StatAdjustedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatAdjustedEvent.ProtoReflect.Descriptor instead.
func (*StatAdjustedEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{4}
}

func (x *StatAdjustedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *StatAdjustedEvent) GetStatType() StatType {
	if x != nil {
		return x.StatType
	}
	return StatType_STAT_TYPE_UNSPECIFIED
}

func (x *StatAdjustedEvent) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StatAdjustedEvent) GetNewValue() int32 {
	if x != nil {
		return x.NewValue
	}
	return 0
}

// 特性调整事件 (替代 TraitAdded/RemovedEvent)
type TraitAdjustedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Trait         string                 `protobuf:"bytes,2,opt,name=trait,proto3" json:"trait,omitempty"`
	WasAdded      bool                   `protobuf:"varint,3,opt,name=was_added,json=wasAdded,proto3" json:"was_added,omitempty"` // true for added, false for removed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraitAdjustedEvent) Reset() {
	*x = TraitAdjustedEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraitAdjustedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraitAdjustedEvent) ProtoMessage() {}

func (x *TraitAdjustedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraitAdjustedEvent.ProtoReflect.Descriptor instead.
func (*TraitAdjustedEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{5}
}

func (x *TraitAdjustedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *TraitAdjustedEvent) GetTrait() string {
	if x != nil {
		return x.Trait
	}
	return ""
}

func (x *TraitAdjustedEvent) GetWasAdded() bool {
	if x != nil {
		return x.WasAdded
	}
	return false
}

// 循环失败事件
type LoopLossEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IncidentId    int32                  `protobuf:"varint,1,opt,name=incident_id,json=incidentId,proto3" json:"incident_id,omitempty"` // 导致失败的事件类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoopLossEvent) Reset() {
	*x = LoopLossEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoopLossEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoopLossEvent) ProtoMessage() {}

func (x *LoopLossEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoopLossEvent.ProtoReflect.Descriptor instead.
func (*LoopLossEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{6}
}

func (x *LoopLossEvent) GetIncidentId() int32 {
	if x != nil {
		return x.IncidentId
	}
	return 0
}

// 循环胜利事件
type LoopWinEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoopWinEvent) Reset() {
	*x = LoopWinEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoopWinEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoopWinEvent) ProtoMessage() {}

func (x *LoopWinEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoopWinEvent.ProtoReflect.Descriptor instead.
func (*LoopWinEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{7}
}

// 能力使用事件
type AbilityUsedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // 使用能力的角色ID
	AbilityName   string                 `protobuf:"bytes,2,opt,name=ability_name,json=abilityName,proto3" json:"ability_name,omitempty"`  // 使用的能力名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbilityUsedEvent) Reset() {
	*x = AbilityUsedEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbilityUsedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbilityUsedEvent) ProtoMessage() {}

func (x *AbilityUsedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbilityUsedEvent.ProtoReflect.Descriptor instead.
func (*AbilityUsedEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{8}
}

func (x *AbilityUsedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *AbilityUsedEvent) GetAbilityName() string {
	if x != nil {
		return x.AbilityName
	}
	return ""
}

// 天数推进事件
type DayAdvancedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Day           int32                  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`   // 新的天数
	Loop          int32                  `protobuf:"varint,2,opt,name=loop,proto3" json:"loop,omitempty"` // 当前的循环数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DayAdvancedEvent) Reset() {
	*x = DayAdvancedEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DayAdvancedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayAdvancedEvent) ProtoMessage() {}

func (x *DayAdvancedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayAdvancedEvent.ProtoReflect.Descriptor instead.
func (*DayAdvancedEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{9}
}

func (x *DayAdvancedEvent) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *DayAdvancedEvent) GetLoop() int32 {
	if x != nil {
		return x.Loop
	}
	return 0
}

// 卡牌打出事件
type CardPlayedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Card          *Card                  `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CardPlayedEvent) Reset() {
	*x = CardPlayedEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardPlayedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardPlayedEvent) ProtoMessage() {}

func (x *CardPlayedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardPlayedEvent.ProtoReflect.Descriptor instead.
func (*CardPlayedEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{10}
}

func (x *CardPlayedEvent) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *CardPlayedEvent) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

// 卡牌揭示事件
type CardRevealedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         map[int32]*CardList    `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // player_id -> card
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CardRevealedEvent) Reset() {
	*x = CardRevealedEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardRevealedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRevealedEvent) ProtoMessage() {}

func (x *CardRevealedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRevealedEvent.ProtoReflect.Descriptor instead.
func (*CardRevealedEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{11}
}

func (x *CardRevealedEvent) GetCards() map[int32]*CardList {
	if x != nil {
		return x.Cards
	}
	return nil
}

// 循环重置事件
type LoopResetEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LoopNumber    int32                  `protobuf:"varint,1,opt,name=loop_number,json=loopNumber,proto3" json:"loop_number,omitempty"` // 新的循环数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoopResetEvent) Reset() {
	*x = LoopResetEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoopResetEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoopResetEvent) ProtoMessage() {}

func (x *LoopResetEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoopResetEvent.ProtoReflect.Descriptor instead.
func (*LoopResetEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{12}
}

func (x *LoopResetEvent) GetLoopNumber() int32 {
	if x != nil {
		return x.LoopNumber
	}
	return 0
}

// 游戏结束事件
type GameEndedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Winner        PlayerRole             `protobuf:"varint,1,opt,name=winner,proto3,enum=tragedylooper.v1.PlayerRole" json:"winner,omitempty"` // 胜利的玩家角色
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`                                   // 游戏结束原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameEndedEvent) Reset() {
	*x = GameEndedEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameEndedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEndedEvent) ProtoMessage() {}

func (x *GameEndedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEndedEvent.ProtoReflect.Descriptor instead.
func (*GameEndedEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{13}
}

func (x *GameEndedEvent) GetWinner() PlayerRole {
	if x != nil {
		return x.Winner
	}
	return PlayerRole_PLAYER_ROLE_UNSPECIFIED
}

func (x *GameEndedEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 需要玩家做出选择的事件
type ChoiceRequiredEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 此选择请求的唯一ID，例如 "card_22_target"
	PlayerId      int32                  `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`   // 需要做选择的玩家
	Choices       []*Choice              `protobuf:"bytes,3,rep,name=choices,proto3" json:"choices,omitempty"`                      // 提供给玩家的选项列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChoiceRequiredEvent) Reset() {
	*x = ChoiceRequiredEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChoiceRequiredEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceRequiredEvent) ProtoMessage() {}

func (x *ChoiceRequiredEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceRequiredEvent.ProtoReflect.Descriptor instead.
func (*ChoiceRequiredEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{14}
}

func (x *ChoiceRequiredEvent) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ChoiceRequiredEvent) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ChoiceRequiredEvent) GetChoices() []*Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

// 事件触发事件
type IncidentTriggeredEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Incident      *Incident              `protobuf:"bytes,1,opt,name=incident,proto3" json:"incident,omitempty"` // 被触发的事件详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncidentTriggeredEvent) Reset() {
	*x = IncidentTriggeredEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncidentTriggeredEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncidentTriggeredEvent) ProtoMessage() {}

func (x *IncidentTriggeredEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncidentTriggeredEvent.ProtoReflect.Descriptor instead.
func (*IncidentTriggeredEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{15}
}

func (x *IncidentTriggeredEvent) GetIncident() *Incident {
	if x != nil {
		return x.Incident
	}
	return nil
}

// 悲剧触发事件
type TragedyTriggeredEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TragedyId     int32                  `protobuf:"varint,1,opt,name=tragedy_id,json=tragedyId,proto3" json:"tragedy_id,omitempty"` // 被触发的悲剧类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TragedyTriggeredEvent) Reset() {
	*x = TragedyTriggeredEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TragedyTriggeredEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TragedyTriggeredEvent) ProtoMessage() {}

func (x *TragedyTriggeredEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TragedyTriggeredEvent.ProtoReflect.Descriptor instead.
func (*TragedyTriggeredEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{16}
}

func (x *TragedyTriggeredEvent) GetTragedyId() int32 {
	if x != nil {
		return x.TragedyId
	}
	return 0
}

type PlayerActionTakenEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Action        *PlayerActionPayload   `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerActionTakenEvent) Reset() {
	*x = PlayerActionTakenEvent{}
	mi := &file_tragedylooper_v1_event_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerActionTakenEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerActionTakenEvent) ProtoMessage() {}

func (x *PlayerActionTakenEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_event_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerActionTakenEvent.ProtoReflect.Descriptor instead.
func (*PlayerActionTakenEvent) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_event_proto_rawDescGZIP(), []int{17}
}

func (x *PlayerActionTakenEvent) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerActionTakenEvent) GetAction() *PlayerActionPayload {
	if x != nil {
		return x.Action
	}
	return nil
}

var File_tragedylooper_v1_event_proto protoreflect.FileDescriptor

const file_tragedylooper_v1_event_proto_rawDesc = "" +
	"\n" +
	"\x1ctragedylooper/v1/event.proto\x12\x10tragedylooper.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1ctragedylooper/v1/enums.proto\x1a\x1btragedylooper/v1/card.proto\x1a\x1ftragedylooper/v1/incident.proto\x1a\x1etragedylooper/v1/payload.proto\x1a\x1dtragedylooper/v1/common.proto\"\xf2\x01\n" +
	"\tGameEvent\x123\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1f.tragedylooper.v1.GameEventTypeR\x04type\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x128\n" +
	"\apayload\x18\x03 \x01(\v2\x1e.tragedylooper.v1.EventPayloadR\apayload\x122\n" +
	"\x05cause\x18\x04 \x01(\v2\x17.tragedylooper.v1.CauseH\x00R\x05cause\x88\x01\x01B\b\n" +
	"\x06_cause\"t\n" +
	"\x05Cause\x12\x19\n" +
	"\acard_id\x18\x01 \x01(\x05H\x00R\x06cardId\x12\x1f\n" +
	"\n" +
	"ability_id\x18\x02 \x01(\x05H\x00R\tabilityId\x12!\n" +
	"\vincident_id\x18\x03 \x01(\x05H\x00R\n" +
	"incidentIdB\f\n" +
	"\n" +
	"cause_type\"\x8e\t\n" +
	"\fEventPayload\x12P\n" +
	"\x0fcharacter_moved\x18\x01 \x01(\v2%.tragedylooper.v1.CharacterMovedEventH\x00R\x0echaracterMoved\x12J\n" +
	"\rstat_adjusted\x18\x02 \x01(\v2#.tragedylooper.v1.StatAdjustedEventH\x00R\fstatAdjusted\x12>\n" +
	"\tloop_loss\x18\x05 \x01(\v2\x1f.tragedylooper.v1.LoopLossEventH\x00R\bloopLoss\x12;\n" +
	"\bloop_win\x18\x06 \x01(\v2\x1e.tragedylooper.v1.LoopWinEventH\x00R\aloopWin\x12G\n" +
	"\fability_used\x18\a \x01(\v2\".tragedylooper.v1.AbilityUsedEventH\x00R\vabilityUsed\x12G\n" +
	"\fday_advanced\x18\b \x01(\v2\".tragedylooper.v1.DayAdvancedEventH\x00R\vdayAdvanced\x12D\n" +
	"\vcard_played\x18\t \x01(\v2!.tragedylooper.v1.CardPlayedEventH\x00R\n" +
	"cardPlayed\x12J\n" +
	"\rcard_revealed\x18\n" +
	" \x01(\v2#.tragedylooper.v1.CardRevealedEventH\x00R\fcardRevealed\x12A\n" +
	"\n" +
	"loop_reset\x18\v \x01(\v2 .tragedylooper.v1.LoopResetEventH\x00R\tloopReset\x12A\n" +
	"\n" +
	"game_ended\x18\f \x01(\v2 .tragedylooper.v1.GameEndedEventH\x00R\tgameEnded\x12P\n" +
	"\x0fchoice_required\x18\r \x01(\v2%.tragedylooper.v1.ChoiceRequiredEventH\x00R\x0echoiceRequired\x12Y\n" +
	"\x12incident_triggered\x18\x0e \x01(\v2(.tragedylooper.v1.IncidentTriggeredEventH\x00R\x11incidentTriggered\x12V\n" +
	"\x11tragedy_triggered\x18\x0f \x01(\v2'.tragedylooper.v1.TragedyTriggeredEventH\x00R\x10tragedyTriggered\x12M\n" +
	"\x0etrait_adjusted\x18\x10 \x01(\v2$.tragedylooper.v1.TraitAdjustedEventH\x00R\rtraitAdjusted\x12Z\n" +
	"\x13player_action_taken\x18\x12 \x01(\v2(.tragedylooper.v1.PlayerActionTakenEventH\x00R\x11playerActionTakenB\t\n" +
	"\apayload\"{\n" +
	"\x13CharacterMovedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x12A\n" +
	"\fnew_location\x18\x02 \x01(\x0e2\x1e.tragedylooper.v1.LocationTypeR\vnewLocation\"\xa4\x01\n" +
	"\x11StatAdjustedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x127\n" +
	"\tstat_type\x18\x02 \x01(\x0e2\x1a.tragedylooper.v1.StatTypeR\bstatType\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x05R\x06amount\x12\x1b\n" +
	"\tnew_value\x18\x04 \x01(\x05R\bnewValue\"j\n" +
	"\x12TraitAdjustedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x12\x14\n" +
	"\x05trait\x18\x02 \x01(\tR\x05trait\x12\x1b\n" +
	"\twas_added\x18\x03 \x01(\bR\bwasAdded\"0\n" +
	"\rLoopLossEvent\x12\x1f\n" +
	"\vincident_id\x18\x01 \x01(\x05R\n" +
	"incidentId\"\x0e\n" +
	"\fLoopWinEvent\"X\n" +
	"\x10AbilityUsedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x12!\n" +
	"\fability_name\x18\x02 \x01(\tR\vabilityName\"8\n" +
	"\x10DayAdvancedEvent\x12\x10\n" +
	"\x03day\x18\x01 \x01(\x05R\x03day\x12\x12\n" +
	"\x04loop\x18\x02 \x01(\x05R\x04loop\"Z\n" +
	"\x0fCardPlayedEvent\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\x12*\n" +
	"\x04card\x18\x02 \x01(\v2\x16.tragedylooper.v1.CardR\x04card\"\xaf\x01\n" +
	"\x11CardRevealedEvent\x12D\n" +
	"\x05cards\x18\x01 \x03(\v2..tragedylooper.v1.CardRevealedEvent.CardsEntryR\x05cards\x1aT\n" +
	"\n" +
	"CardsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.tragedylooper.v1.CardListR\x05value:\x028\x01\"1\n" +
	"\x0eLoopResetEvent\x12\x1f\n" +
	"\vloop_number\x18\x01 \x01(\x05R\n" +
	"loopNumber\"^\n" +
	"\x0eGameEndedEvent\x124\n" +
	"\x06winner\x18\x01 \x01(\x0e2\x1c.tragedylooper.v1.PlayerRoleR\x06winner\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x85\x01\n" +
	"\x13ChoiceRequiredEvent\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\x05R\bplayerId\x122\n" +
	"\achoices\x18\x03 \x03(\v2\x18.tragedylooper.v1.ChoiceR\achoices\"P\n" +
	"\x16IncidentTriggeredEvent\x126\n" +
	"\bincident\x18\x01 \x01(\v2\x1a.tragedylooper.v1.IncidentR\bincident\"6\n" +
	"\x15TragedyTriggeredEvent\x12\x1d\n" +
	"\n" +
	"tragedy_id\x18\x01 \x01(\x05R\ttragedyId\"t\n" +
	"\x16PlayerActionTakenEvent\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\x12=\n" +
	"\x06action\x18\x02 \x01(\v2%.tragedylooper.v1.PlayerActionPayloadR\x06actionB\xba\x01\n" +
	"\x14com.tragedylooper.v1B\n" +
	"EventProtoP\x01Z5github.com/constellation39/tragedyLooper/pkg/proto/v1\xa2\x02\x03TXX\xaa\x02\x10Tragedylooper.V1\xca\x02\x10Tragedylooper\\V1\xe2\x02\x1cTragedylooper\\V1\\GPBMetadata\xea\x02\x11Tragedylooper::V1b\x06proto3"

var (
	file_tragedylooper_v1_event_proto_rawDescOnce sync.Once
	file_tragedylooper_v1_event_proto_rawDescData []byte
)

func file_tragedylooper_v1_event_proto_rawDescGZIP() []byte {
	file_tragedylooper_v1_event_proto_rawDescOnce.Do(func() {
		file_tragedylooper_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tragedylooper_v1_event_proto_rawDesc), len(file_tragedylooper_v1_event_proto_rawDesc)))
	})
	return file_tragedylooper_v1_event_proto_rawDescData
}

var file_tragedylooper_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_tragedylooper_v1_event_proto_goTypes = []any{
	(*GameEvent)(nil),              // 0: tragedylooper.v1.GameEvent
	(*Cause)(nil),                  // 1: tragedylooper.v1.Cause
	(*EventPayload)(nil),           // 2: tragedylooper.v1.EventPayload
	(*CharacterMovedEvent)(nil),    // 3: tragedylooper.v1.CharacterMovedEvent
	(*StatAdjustedEvent)(nil),      // 4: tragedylooper.v1.StatAdjustedEvent
	(*TraitAdjustedEvent)(nil),     // 5: tragedylooper.v1.TraitAdjustedEvent
	(*LoopLossEvent)(nil),          // 6: tragedylooper.v1.LoopLossEvent
	(*LoopWinEvent)(nil),           // 7: tragedylooper.v1.LoopWinEvent
	(*AbilityUsedEvent)(nil),       // 8: tragedylooper.v1.AbilityUsedEvent
	(*DayAdvancedEvent)(nil),       // 9: tragedylooper.v1.DayAdvancedEvent
	(*CardPlayedEvent)(nil),        // 10: tragedylooper.v1.CardPlayedEvent
	(*CardRevealedEvent)(nil),      // 11: tragedylooper.v1.CardRevealedEvent
	(*LoopResetEvent)(nil),         // 12: tragedylooper.v1.LoopResetEvent
	(*GameEndedEvent)(nil),         // 13: tragedylooper.v1.GameEndedEvent
	(*ChoiceRequiredEvent)(nil),    // 14: tragedylooper.v1.ChoiceRequiredEvent
	(*IncidentTriggeredEvent)(nil), // 15: tragedylooper.v1.IncidentTriggeredEvent
	(*TragedyTriggeredEvent)(nil),  // 16: tragedylooper.v1.TragedyTriggeredEvent
	(*PlayerActionTakenEvent)(nil), // 17: tragedylooper.v1.PlayerActionTakenEvent
	nil,                            // 18: tragedylooper.v1.CardRevealedEvent.CardsEntry
	(GameEventType)(0),             // 19: tragedylooper.v1.GameEventType
	(*timestamppb.Timestamp)(nil),  // 20: google.protobuf.Timestamp
	(LocationType)(0),              // 21: tragedylooper.v1.LocationType
	(StatType)(0),                  // 22: tragedylooper.v1.StatType
	(*Card)(nil),                   // 23: tragedylooper.v1.Card
	(PlayerRole)(0),                // 24: tragedylooper.v1.PlayerRole
	(*Choice)(nil),                 // 25: tragedylooper.v1.Choice
	(*Incident)(nil),               // 26: tragedylooper.v1.Incident
	(*PlayerActionPayload)(nil),    // 27: tragedylooper.v1.PlayerActionPayload
	(*CardList)(nil),               // 28: tragedylooper.v1.CardList
}
var file_tragedylooper_v1_event_proto_depIdxs = []int32{
	19, // 0: tragedylooper.v1.GameEvent.type:type_name -> tragedylooper.v1.GameEventType
	20, // 1: tragedylooper.v1.GameEvent.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 2: tragedylooper.v1.GameEvent.payload:type_name -> tragedylooper.v1.EventPayload
	1,  // 3: tragedylooper.v1.GameEvent.cause:type_name -> tragedylooper.v1.Cause
	3,  // 4: tragedylooper.v1.EventPayload.character_moved:type_name -> tragedylooper.v1.CharacterMovedEvent
	4,  // 5: tragedylooper.v1.EventPayload.stat_adjusted:type_name -> tragedylooper.v1.StatAdjustedEvent
	6,  // 6: tragedylooper.v1.EventPayload.loop_loss:type_name -> tragedylooper.v1.LoopLossEvent
	7,  // 7: tragedylooper.v1.EventPayload.loop_win:type_name -> tragedylooper.v1.LoopWinEvent
	8,  // 8: tragedylooper.v1.EventPayload.ability_used:type_name -> tragedylooper.v1.AbilityUsedEvent
	9,  // 9: tragedylooper.v1.EventPayload.day_advanced:type_name -> tragedylooper.v1.DayAdvancedEvent
	10, // 10: tragedylooper.v1.EventPayload.card_played:type_name -> tragedylooper.v1.CardPlayedEvent
	11, // 11: tragedylooper.v1.EventPayload.card_revealed:type_name -> tragedylooper.v1.CardRevealedEvent
	12, // 12: tragedylooper.v1.EventPayload.loop_reset:type_name -> tragedylooper.v1.LoopResetEvent
	13, // 13: tragedylooper.v1.EventPayload.game_ended:type_name -> tragedylooper.v1.GameEndedEvent
	14, // 14: tragedylooper.v1.EventPayload.choice_required:type_name -> tragedylooper.v1.ChoiceRequiredEvent
	15, // 15: tragedylooper.v1.EventPayload.incident_triggered:type_name -> tragedylooper.v1.IncidentTriggeredEvent
	16, // 16: tragedylooper.v1.EventPayload.tragedy_triggered:type_name -> tragedylooper.v1.TragedyTriggeredEvent
	5,  // 17: tragedylooper.v1.EventPayload.trait_adjusted:type_name -> tragedylooper.v1.TraitAdjustedEvent
	17, // 18: tragedylooper.v1.EventPayload.player_action_taken:type_name -> tragedylooper.v1.PlayerActionTakenEvent
	21, // 19: tragedylooper.v1.CharacterMovedEvent.new_location:type_name -> tragedylooper.v1.LocationType
	22, // 20: tragedylooper.v1.StatAdjustedEvent.stat_type:type_name -> tragedylooper.v1.StatType
	23, // 21: tragedylooper.v1.CardPlayedEvent.card:type_name -> tragedylooper.v1.Card
	18, // 22: tragedylooper.v1.CardRevealedEvent.cards:type_name -> tragedylooper.v1.CardRevealedEvent.CardsEntry
	24, // 23: tragedylooper.v1.GameEndedEvent.winner:type_name -> tragedylooper.v1.PlayerRole
	25, // 24: tragedylooper.v1.ChoiceRequiredEvent.choices:type_name -> tragedylooper.v1.Choice
	26, // 25: tragedylooper.v1.IncidentTriggeredEvent.incident:type_name -> tragedylooper.v1.Incident
	27, // 26: tragedylooper.v1.PlayerActionTakenEvent.action:type_name -> tragedylooper.v1.PlayerActionPayload
	28, // 27: tragedylooper.v1.CardRevealedEvent.CardsEntry.value:type_name -> tragedylooper.v1.CardList
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_tragedylooper_v1_event_proto_init() }
func file_tragedylooper_v1_event_proto_init() {
	if File_tragedylooper_v1_event_proto != nil {
		return
	}
	file_tragedylooper_v1_enums_proto_init()
	file_tragedylooper_v1_card_proto_init()
	file_tragedylooper_v1_incident_proto_init()
	file_tragedylooper_v1_payload_proto_init()
	file_tragedylooper_v1_common_proto_init()
	file_tragedylooper_v1_event_proto_msgTypes[0].OneofWrappers = []any{}
	file_tragedylooper_v1_event_proto_msgTypes[1].OneofWrappers = []any{
		(*Cause_CardId)(nil),
		(*Cause_AbilityId)(nil),
		(*Cause_IncidentId)(nil),
	}
	file_tragedylooper_v1_event_proto_msgTypes[2].OneofWrappers = []any{
		(*EventPayload_CharacterMoved)(nil),
		(*EventPayload_StatAdjusted)(nil),
		(*EventPayload_LoopLoss)(nil),
		(*EventPayload_LoopWin)(nil),
		(*EventPayload_AbilityUsed)(nil),
		(*EventPayload_DayAdvanced)(nil),
		(*EventPayload_CardPlayed)(nil),
		(*EventPayload_CardRevealed)(nil),
		(*EventPayload_LoopReset)(nil),
		(*EventPayload_GameEnded)(nil),
		(*EventPayload_ChoiceRequired)(nil),
		(*EventPayload_IncidentTriggered)(nil),
		(*EventPayload_TragedyTriggered)(nil),
		(*EventPayload_TraitAdjusted)(nil),
		(*EventPayload_PlayerActionTaken)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tragedylooper_v1_event_proto_rawDesc), len(file_tragedylooper_v1_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tragedylooper_v1_event_proto_goTypes,
		DependencyIndexes: file_tragedylooper_v1_event_proto_depIdxs,
		MessageInfos:      file_tragedylooper_v1_event_proto_msgTypes,
	}.Build()
	File_tragedylooper_v1_event_proto = out.File
	file_tragedylooper_v1_event_proto_goTypes = nil
	file_tragedylooper_v1_event_proto_depIdxs = nil
}
