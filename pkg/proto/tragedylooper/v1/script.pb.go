// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tragedylooper/v1/script.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Script defines the configuration for a tragedy looper script.
type ScriptConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier for the script.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the script.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// A description of the script.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Main plot configurations. ID range: 1000-1999
	MainPlots map[int32]*PlotConfig `protobuf:"bytes,4,rep,name=main_plots,json=mainPlots,proto3" json:"main_plots,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Sub plot configurations. ID range: 2000-2999
	SubPlots map[int32]*PlotConfig `protobuf:"bytes,5,rep,name=sub_plots,json=subPlots,proto3" json:"sub_plots,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Role configurations. ID range: 3000-3999
	Roles map[int32]*RoleConfig `protobuf:"bytes,6,rep,name=roles,proto3" json:"roles,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Incident configurations. ID range: 4000-4999
	Incidents map[int32]*IncidentConfig `protobuf:"bytes,7,rep,name=incidents,proto3" json:"incidents,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Character configurations. ID range: 5000-5999
	Characters map[int32]*CharacterConfig `protobuf:"bytes,8,rep,name=characters,proto3" json:"characters,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Mastermind card configurations. ID range: 6000-6999
	MastermindCards map[int32]*CardConfig `protobuf:"bytes,9,rep,name=mastermind_cards,json=mastermindCards,proto3" json:"mastermind_cards,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Protagonist card configurations. ID range: 7000-7999
	ProtagonistCards map[int32]*CardConfig `protobuf:"bytes,10,rep,name=protagonist_cards,json=protagonistCards,proto3" json:"protagonist_cards,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// A map of script configurations. ID range: 8000-8999
	ScriptModels  map[int32]*ScriptModel `protobuf:"bytes,11,rep,name=script_models,json=scriptModels,proto3" json:"script_models,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScriptConfig) Reset() {
	*x = ScriptConfig{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScriptConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptConfig) ProtoMessage() {}

func (x *ScriptConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptConfig.ProtoReflect.Descriptor instead.
func (*ScriptConfig) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{0}
}

func (x *ScriptConfig) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScriptConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScriptConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScriptConfig) GetMainPlots() map[int32]*PlotConfig {
	if x != nil {
		return x.MainPlots
	}
	return nil
}

func (x *ScriptConfig) GetSubPlots() map[int32]*PlotConfig {
	if x != nil {
		return x.SubPlots
	}
	return nil
}

func (x *ScriptConfig) GetRoles() map[int32]*RoleConfig {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ScriptConfig) GetIncidents() map[int32]*IncidentConfig {
	if x != nil {
		return x.Incidents
	}
	return nil
}

func (x *ScriptConfig) GetCharacters() map[int32]*CharacterConfig {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *ScriptConfig) GetMastermindCards() map[int32]*CardConfig {
	if x != nil {
		return x.MastermindCards
	}
	return nil
}

func (x *ScriptConfig) GetProtagonistCards() map[int32]*CardConfig {
	if x != nil {
		return x.ProtagonistCards
	}
	return nil
}

func (x *ScriptConfig) GetScriptModels() map[int32]*ScriptModel {
	if x != nil {
		return x.ScriptModels
	}
	return nil
}

type ScriptSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Number        int32                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScriptSet) Reset() {
	*x = ScriptSet{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScriptSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptSet) ProtoMessage() {}

func (x *ScriptSet) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptSet.ProtoReflect.Descriptor instead.
func (*ScriptSet) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{1}
}

func (x *ScriptSet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScriptSet) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type DifficultySet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumberOfLoops int32                  `protobuf:"varint,1,opt,name=number_of_loops,json=numberOfLoops,proto3" json:"number_of_loops,omitempty"`
	Difficulty    int32                  `protobuf:"varint,2,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DifficultySet) Reset() {
	*x = DifficultySet{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DifficultySet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DifficultySet) ProtoMessage() {}

func (x *DifficultySet) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DifficultySet.ProtoReflect.Descriptor instead.
func (*DifficultySet) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{2}
}

func (x *DifficultySet) GetNumberOfLoops() int32 {
	if x != nil {
		return x.NumberOfLoops
	}
	return 0
}

func (x *DifficultySet) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

type IncidentInstance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Day           int32                  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	Incident      string                 `protobuf:"bytes,2,opt,name=incident,proto3" json:"incident,omitempty"`
	Culprit       string                 `protobuf:"bytes,3,opt,name=culprit,proto3" json:"culprit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncidentInstance) Reset() {
	*x = IncidentInstance{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncidentInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncidentInstance) ProtoMessage() {}

func (x *IncidentInstance) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncidentInstance.ProtoReflect.Descriptor instead.
func (*IncidentInstance) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{3}
}

func (x *IncidentInstance) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *IncidentInstance) GetIncident() string {
	if x != nil {
		return x.Incident
	}
	return ""
}

func (x *IncidentInstance) GetCulprit() string {
	if x != nil {
		return x.Culprit
	}
	return ""
}

type CastRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	ExtraInfo     map[string]string      `protobuf:"bytes,2,rep,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CastRole) Reset() {
	*x = CastRole{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CastRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastRole) ProtoMessage() {}

func (x *CastRole) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastRole.ProtoReflect.Descriptor instead.
func (*CastRole) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{4}
}

func (x *CastRole) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CastRole) GetExtraInfo() map[string]string {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

type CastAssignment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Assignment:
	//
	//	*CastAssignment_RoleName
	//	*CastAssignment_RoleWithExtra
	Assignment    isCastAssignment_Assignment `protobuf_oneof:"assignment"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CastAssignment) Reset() {
	*x = CastAssignment{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CastAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastAssignment) ProtoMessage() {}

func (x *CastAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastAssignment.ProtoReflect.Descriptor instead.
func (*CastAssignment) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{5}
}

func (x *CastAssignment) GetAssignment() isCastAssignment_Assignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

func (x *CastAssignment) GetRoleName() string {
	if x != nil {
		if x, ok := x.Assignment.(*CastAssignment_RoleName); ok {
			return x.RoleName
		}
	}
	return ""
}

func (x *CastAssignment) GetRoleWithExtra() *CastRole {
	if x != nil {
		if x, ok := x.Assignment.(*CastAssignment_RoleWithExtra); ok {
			return x.RoleWithExtra
		}
	}
	return nil
}

type isCastAssignment_Assignment interface {
	isCastAssignment_Assignment()
}

type CastAssignment_RoleName struct {
	RoleName string `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3,oneof"`
}

type CastAssignment_RoleWithExtra struct {
	RoleWithExtra *CastRole `protobuf:"bytes,2,opt,name=role_with_extra,json=roleWithExtra,proto3,oneof"`
}

func (*CastAssignment_RoleName) isCastAssignment_Assignment() {}

func (*CastAssignment_RoleWithExtra) isCastAssignment_Assignment() {}

type ScriptMetadata struct {
	state             protoimpl.MessageState     `protogen:"open.v1"`
	Title             string                     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Creator           string                     `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Set               []*ScriptSet               `protobuf:"bytes,3,rep,name=set,proto3" json:"set,omitempty"`
	TragedySet        string                     `protobuf:"bytes,4,opt,name=tragedy_set,json=tragedySet,proto3" json:"tragedy_set,omitempty"`
	DaysPerLoop       int32                      `protobuf:"varint,5,opt,name=days_per_loop,json=daysPerLoop,proto3" json:"days_per_loop,omitempty"`
	DifficultySets    []*DifficultySet           `protobuf:"bytes,6,rep,name=difficulty_sets,json=difficultySets,proto3" json:"difficulty_sets,omitempty"`
	MainPlot          []string                   `protobuf:"bytes,7,rep,name=main_plot,json=mainPlot,proto3" json:"main_plot,omitempty"`
	SubPlots          []string                   `protobuf:"bytes,8,rep,name=sub_plots,json=subPlots,proto3" json:"sub_plots,omitempty"`
	Cast              map[string]*CastAssignment `protobuf:"bytes,9,rep,name=cast,proto3" json:"cast,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Incidents         []*IncidentInstance        `protobuf:"bytes,10,rep,name=incidents,proto3" json:"incidents,omitempty"`
	VictoryConditions string                     `protobuf:"bytes,11,opt,name=victory_conditions,json=victoryConditions,proto3" json:"victory_conditions,omitempty"`
	Story             string                     `protobuf:"bytes,12,opt,name=story,proto3" json:"story,omitempty"`
	MastermindHints   string                     `protobuf:"bytes,13,opt,name=mastermind_hints,json=mastermindHints,proto3" json:"mastermind_hints,omitempty"`
	Description       string                     `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	SpecialRules      []string                   `protobuf:"bytes,15,rep,name=special_rules,json=specialRules,proto3" json:"special_rules,omitempty"`
	Source            string                     `protobuf:"bytes,16,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ScriptMetadata) Reset() {
	*x = ScriptMetadata{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScriptMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptMetadata) ProtoMessage() {}

func (x *ScriptMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptMetadata.ProtoReflect.Descriptor instead.
func (*ScriptMetadata) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{6}
}

func (x *ScriptMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ScriptMetadata) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ScriptMetadata) GetSet() []*ScriptSet {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *ScriptMetadata) GetTragedySet() string {
	if x != nil {
		return x.TragedySet
	}
	return ""
}

func (x *ScriptMetadata) GetDaysPerLoop() int32 {
	if x != nil {
		return x.DaysPerLoop
	}
	return 0
}

func (x *ScriptMetadata) GetDifficultySets() []*DifficultySet {
	if x != nil {
		return x.DifficultySets
	}
	return nil
}

func (x *ScriptMetadata) GetMainPlot() []string {
	if x != nil {
		return x.MainPlot
	}
	return nil
}

func (x *ScriptMetadata) GetSubPlots() []string {
	if x != nil {
		return x.SubPlots
	}
	return nil
}

func (x *ScriptMetadata) GetCast() map[string]*CastAssignment {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *ScriptMetadata) GetIncidents() []*IncidentInstance {
	if x != nil {
		return x.Incidents
	}
	return nil
}

func (x *ScriptMetadata) GetVictoryConditions() string {
	if x != nil {
		return x.VictoryConditions
	}
	return ""
}

func (x *ScriptMetadata) GetStory() string {
	if x != nil {
		return x.Story
	}
	return ""
}

func (x *ScriptMetadata) GetMastermindHints() string {
	if x != nil {
		return x.MastermindHints
	}
	return ""
}

func (x *ScriptMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScriptMetadata) GetSpecialRules() []string {
	if x != nil {
		return x.SpecialRules
	}
	return nil
}

func (x *ScriptMetadata) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// ScriptModel defines the configuration for a specific script.
type ScriptModel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Private information for the script.
	PrivateInfo *PrivateInfo `protobuf:"bytes,2,opt,name=private_info,json=privateInfo,proto3" json:"private_info,omitempty"`
	// Public information for the script.
	PublicInfo *PublicInfo `protobuf:"bytes,3,opt,name=public_info,json=publicInfo,proto3" json:"public_info,omitempty"`
	// Descriptive metadata for the script.
	Metadata      *ScriptMetadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScriptModel) Reset() {
	*x = ScriptModel{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScriptModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptModel) ProtoMessage() {}

func (x *ScriptModel) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptModel.ProtoReflect.Descriptor instead.
func (*ScriptModel) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{7}
}

func (x *ScriptModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScriptModel) GetPrivateInfo() *PrivateInfo {
	if x != nil {
		return x.PrivateInfo
	}
	return nil
}

func (x *ScriptModel) GetPublicInfo() *PublicInfo {
	if x != nil {
		return x.PublicInfo
	}
	return nil
}

func (x *ScriptModel) GetMetadata() *ScriptMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// PrivateInfo defines the private information for a script.
type PrivateInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The main plot of the script.
	MainPlotId int32 `protobuf:"varint,1,opt,name=main_plot_id,json=mainPlotId,proto3" json:"main_plot_id,omitempty"`
	// A list of sub plots for the script.
	SubPlotsIds []int32 `protobuf:"varint,2,rep,packed,name=sub_plots_ids,json=subPlotsIds,proto3" json:"sub_plots_ids,omitempty"`
	// A map of characters in the script.
	CharactersIds []int32 `protobuf:"varint,3,rep,packed,name=characters_ids,json=charactersIds,proto3" json:"characters_ids,omitempty"`
	// A map of incidents in the script.
	IncidentIds []int32 `protobuf:"varint,4,rep,packed,name=incident_ids,json=incidentIds,proto3" json:"incident_ids,omitempty"`
	// A map of character to role assignments, derived from the selected plots.
	RoleAssignments map[int32]int32 `protobuf:"bytes,5,rep,name=role_assignments,json=roleAssignments,proto3" json:"role_assignments,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PrivateInfo) Reset() {
	*x = PrivateInfo{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateInfo) ProtoMessage() {}

func (x *PrivateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateInfo.ProtoReflect.Descriptor instead.
func (*PrivateInfo) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{8}
}

func (x *PrivateInfo) GetMainPlotId() int32 {
	if x != nil {
		return x.MainPlotId
	}
	return 0
}

func (x *PrivateInfo) GetSubPlotsIds() []int32 {
	if x != nil {
		return x.SubPlotsIds
	}
	return nil
}

func (x *PrivateInfo) GetCharactersIds() []int32 {
	if x != nil {
		return x.CharactersIds
	}
	return nil
}

func (x *PrivateInfo) GetIncidentIds() []int32 {
	if x != nil {
		return x.IncidentIds
	}
	return nil
}

func (x *PrivateInfo) GetRoleAssignments() map[int32]int32 {
	if x != nil {
		return x.RoleAssignments
	}
	return nil
}

// PublicInfo defines the public information for a script.
type PublicInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier for the script configuration.
	ScriptConfigId int32 `protobuf:"varint,1,opt,name=script_config_id,json=scriptConfigId,proto3" json:"script_config_id,omitempty"`
	// Game rules.
	// The number of loops in the game.
	LoopCount int32 `protobuf:"varint,2,opt,name=loop_count,json=loopCount,proto3" json:"loop_count,omitempty"`
	// The number of days per loop.
	DaysPerLoop int32 `protobuf:"varint,3,opt,name=days_per_loop,json=daysPerLoop,proto3" json:"days_per_loop,omitempty"`
	// Whether players can discuss information.
	CanDiscuss bool `protobuf:"varint,4,opt,name=can_discuss,json=canDiscuss,proto3" json:"can_discuss,omitempty"`
	// Special rules.
	// A map of special incidents.
	SpecialIncidentIds []int32 `protobuf:"varint,5,rep,packed,name=special_incident_ids,json=specialIncidentIds,proto3" json:"special_incident_ids,omitempty"`
	// A map of scheduled incidents.
	ScheduledIncidentIds []int32 `protobuf:"varint,6,rep,packed,name=scheduled_incident_ids,json=scheduledIncidentIds,proto3" json:"scheduled_incident_ids,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PublicInfo) Reset() {
	*x = PublicInfo{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicInfo) ProtoMessage() {}

func (x *PublicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicInfo.ProtoReflect.Descriptor instead.
func (*PublicInfo) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{9}
}

func (x *PublicInfo) GetScriptConfigId() int32 {
	if x != nil {
		return x.ScriptConfigId
	}
	return 0
}

func (x *PublicInfo) GetLoopCount() int32 {
	if x != nil {
		return x.LoopCount
	}
	return 0
}

func (x *PublicInfo) GetDaysPerLoop() int32 {
	if x != nil {
		return x.DaysPerLoop
	}
	return 0
}

func (x *PublicInfo) GetCanDiscuss() bool {
	if x != nil {
		return x.CanDiscuss
	}
	return false
}

func (x *PublicInfo) GetSpecialIncidentIds() []int32 {
	if x != nil {
		return x.SpecialIncidentIds
	}
	return nil
}

func (x *PublicInfo) GetScheduledIncidentIds() []int32 {
	if x != nil {
		return x.ScheduledIncidentIds
	}
	return nil
}

// RoleConfig defines the configuration for a role.
type RoleConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier for the role.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the role.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The limit of characters that can have this role.
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// A map of abilities for this role.
	Abilities map[int32]*AbilityConfig `protobuf:"bytes,4,rep,name=abilities,proto3" json:"abilities,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Defines the character's goodwill status.
	GoodwillRule GoodwillRuleType `protobuf:"varint,5,opt,name=goodwill_rule,json=goodwillRule,proto3,enum=tragedylooper.v1.GoodwillRuleType" json:"goodwill_rule,omitempty"`
	// Defines if the character can be made invincible.
	CanBeInvincible bool `protobuf:"varint,6,opt,name=can_be_invincible,json=canBeInvincible,proto3" json:"can_be_invincible,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RoleConfig) Reset() {
	*x = RoleConfig{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleConfig) ProtoMessage() {}

func (x *RoleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleConfig.ProtoReflect.Descriptor instead.
func (*RoleConfig) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{10}
}

func (x *RoleConfig) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleConfig) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RoleConfig) GetAbilities() map[int32]*AbilityConfig {
	if x != nil {
		return x.Abilities
	}
	return nil
}

func (x *RoleConfig) GetGoodwillRule() GoodwillRuleType {
	if x != nil {
		return x.GoodwillRule
	}
	return GoodwillRuleType_GOODWILL_RULE_TYPE_UNSPECIFIED
}

func (x *RoleConfig) GetCanBeInvincible() bool {
	if x != nil {
		return x.CanBeInvincible
	}
	return false
}

// PlotConfig defines a story plot.
type PlotConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier for the plot.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The type of the plot.
	PlotType PlotType `protobuf:"varint,2,opt,name=plot_type,json=type,proto3,enum=tragedylooper.v1.PlotType" json:"plot_type,omitempty"`
	// The name of the plot.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// A description of the plot.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// A map of incident identifiers for this plot.
	IncidentIds map[int32]*IncidentConfig `protobuf:"bytes,5,rep,name=incident_ids,json=incidentIds,proto3" json:"incident_ids,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// A map of role assignments for this plot.
	RoleAssignments map[int32]int32 `protobuf:"bytes,6,rep,name=role_assignments,json=roleAssignments,proto3" json:"role_assignments,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PlotConfig) Reset() {
	*x = PlotConfig{}
	mi := &file_tragedylooper_v1_script_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlotConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotConfig) ProtoMessage() {}

func (x *PlotConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tragedylooper_v1_script_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotConfig.ProtoReflect.Descriptor instead.
func (*PlotConfig) Descriptor() ([]byte, []int) {
	return file_tragedylooper_v1_script_proto_rawDescGZIP(), []int{11}
}

func (x *PlotConfig) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlotConfig) GetPlotType() PlotType {
	if x != nil {
		return x.PlotType
	}
	return PlotType_PLOT_TYPE_UNSPECIFIED
}

func (x *PlotConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlotConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PlotConfig) GetIncidentIds() map[int32]*IncidentConfig {
	if x != nil {
		return x.IncidentIds
	}
	return nil
}

func (x *PlotConfig) GetRoleAssignments() map[int32]int32 {
	if x != nil {
		return x.RoleAssignments
	}
	return nil
}

var File_tragedylooper_v1_script_proto protoreflect.FileDescriptor

const file_tragedylooper_v1_script_proto_rawDesc = "" +
	"\n" +
	"\x1dtragedylooper/v1/script.proto\x12\x10tragedylooper.v1\x1a\x17validate/validate.proto\x1a\x1ctragedylooper/v1/enums.proto\x1a\x1ftragedylooper/v1/incident.proto\x1a tragedylooper/v1/character.proto\x1a\x1btragedylooper/v1/card.proto\x1a\x1etragedylooper/v1/ability.proto\"\xfd\f\n" +
	"\fScriptConfig\x12\x17\n" +
	"\x02id\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x02id\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12^\n" +
	"\n" +
	"main_plots\x18\x04 \x03(\v2-.tragedylooper.v1.ScriptConfig.MainPlotsEntryB\x10\xfaB\r\x9a\x01\n" +
	"\"\b\x1a\x06\x10\xd0\x0f(\xe8\aR\tmainPlots\x12[\n" +
	"\tsub_plots\x18\x05 \x03(\v2,.tragedylooper.v1.ScriptConfig.SubPlotsEntryB\x10\xfaB\r\x9a\x01\n" +
	"\"\b\x1a\x06\x10\xb8\x17(\xd0\x0fR\bsubPlots\x12Q\n" +
	"\x05roles\x18\x06 \x03(\v2).tragedylooper.v1.ScriptConfig.RolesEntryB\x10\xfaB\r\x9a\x01\n" +
	"\"\b\x1a\x06\x10\xa0\x1f(\xb8\x17R\x05roles\x12]\n" +
	"\tincidents\x18\a \x03(\v2-.tragedylooper.v1.ScriptConfig.IncidentsEntryB\x10\xfaB\r\x9a\x01\n" +
	"\"\b\x1a\x06\x10\x88'(\xa0\x1fR\tincidents\x12`\n" +
	"\n" +
	"characters\x18\b \x03(\v2..tragedylooper.v1.ScriptConfig.CharactersEntryB\x10\xfaB\r\x9a\x01\n" +
	"\"\b\x1a\x06\x10\xf0.(\x88'R\n" +
	"characters\x12p\n" +
	"\x10mastermind_cards\x18\t \x03(\v23.tragedylooper.v1.ScriptConfig.MastermindCardsEntryB\x10\xfaB\r\x9a\x01\n" +
	"\"\b\x1a\x06\x10\xd86(\xf0.R\x0fmastermindCards\x12s\n" +
	"\x11protagonist_cards\x18\n" +
	" \x03(\v24.tragedylooper.v1.ScriptConfig.ProtagonistCardsEntryB\x10\xfaB\r\x9a\x01\n" +
	"\"\b\x1a\x06\x10\xc0>(\xd86R\x10protagonistCards\x12g\n" +
	"\rscript_models\x18\v \x03(\v20.tragedylooper.v1.ScriptConfig.ScriptModelsEntryB\x10\xfaB\r\x9a\x01\n" +
	"\"\b\x1a\x06\x10\xa8F(\xc0>R\fscriptModels\x1aZ\n" +
	"\x0eMainPlotsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.tragedylooper.v1.PlotConfigR\x05value:\x028\x01\x1aY\n" +
	"\rSubPlotsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.tragedylooper.v1.PlotConfigR\x05value:\x028\x01\x1aV\n" +
	"\n" +
	"RolesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.tragedylooper.v1.RoleConfigR\x05value:\x028\x01\x1a^\n" +
	"\x0eIncidentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .tragedylooper.v1.IncidentConfigR\x05value:\x028\x01\x1a`\n" +
	"\x0fCharactersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x127\n" +
	"\x05value\x18\x02 \x01(\v2!.tragedylooper.v1.CharacterConfigR\x05value:\x028\x01\x1a`\n" +
	"\x14MastermindCardsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.tragedylooper.v1.CardConfigR\x05value:\x028\x01\x1aa\n" +
	"\x15ProtagonistCardsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.tragedylooper.v1.CardConfigR\x05value:\x028\x01\x1a^\n" +
	"\x11ScriptModelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.tragedylooper.v1.ScriptModelR\x05value:\x028\x01\"7\n" +
	"\tScriptSet\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06number\x18\x02 \x01(\x05R\x06number\"W\n" +
	"\rDifficultySet\x12&\n" +
	"\x0fnumber_of_loops\x18\x01 \x01(\x05R\rnumberOfLoops\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x02 \x01(\x05R\n" +
	"difficulty\"Z\n" +
	"\x10IncidentInstance\x12\x10\n" +
	"\x03day\x18\x01 \x01(\x05R\x03day\x12\x1a\n" +
	"\bincident\x18\x02 \x01(\tR\bincident\x12\x18\n" +
	"\aculprit\x18\x03 \x01(\tR\aculprit\"\xa6\x01\n" +
	"\bCastRole\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12H\n" +
	"\n" +
	"extra_info\x18\x02 \x03(\v2).tragedylooper.v1.CastRole.ExtraInfoEntryR\textraInfo\x1a<\n" +
	"\x0eExtraInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x83\x01\n" +
	"\x0eCastAssignment\x12\x1d\n" +
	"\trole_name\x18\x01 \x01(\tH\x00R\broleName\x12D\n" +
	"\x0frole_with_extra\x18\x02 \x01(\v2\x1a.tragedylooper.v1.CastRoleH\x00R\rroleWithExtraB\f\n" +
	"\n" +
	"assignment\"\xe4\x05\n" +
	"\x0eScriptMetadata\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acreator\x18\x02 \x01(\tR\acreator\x12-\n" +
	"\x03set\x18\x03 \x03(\v2\x1b.tragedylooper.v1.ScriptSetR\x03set\x12\x1f\n" +
	"\vtragedy_set\x18\x04 \x01(\tR\n" +
	"tragedySet\x12\"\n" +
	"\rdays_per_loop\x18\x05 \x01(\x05R\vdaysPerLoop\x12H\n" +
	"\x0fdifficulty_sets\x18\x06 \x03(\v2\x1f.tragedylooper.v1.DifficultySetR\x0edifficultySets\x12\x1b\n" +
	"\tmain_plot\x18\a \x03(\tR\bmainPlot\x12\x1b\n" +
	"\tsub_plots\x18\b \x03(\tR\bsubPlots\x12>\n" +
	"\x04cast\x18\t \x03(\v2*.tragedylooper.v1.ScriptMetadata.CastEntryR\x04cast\x12@\n" +
	"\tincidents\x18\n" +
	" \x03(\v2\".tragedylooper.v1.IncidentInstanceR\tincidents\x12-\n" +
	"\x12victory_conditions\x18\v \x01(\tR\x11victoryConditions\x12\x14\n" +
	"\x05story\x18\f \x01(\tR\x05story\x12)\n" +
	"\x10mastermind_hints\x18\r \x01(\tR\x0fmastermindHints\x12 \n" +
	"\vdescription\x18\x0e \x01(\tR\vdescription\x12#\n" +
	"\rspecial_rules\x18\x0f \x03(\tR\fspecialRules\x12\x16\n" +
	"\x06source\x18\x10 \x01(\tR\x06source\x1aY\n" +
	"\tCastEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .tragedylooper.v1.CastAssignmentR\x05value:\x028\x01\"\xe5\x01\n" +
	"\vScriptModel\x12\x17\n" +
	"\x02id\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x02id\x12@\n" +
	"\fprivate_info\x18\x02 \x01(\v2\x1d.tragedylooper.v1.PrivateInfoR\vprivateInfo\x12=\n" +
	"\vpublic_info\x18\x03 \x01(\v2\x1c.tragedylooper.v1.PublicInfoR\n" +
	"publicInfo\x12<\n" +
	"\bmetadata\x18\x04 \x01(\v2 .tragedylooper.v1.ScriptMetadataR\bmetadata\"\xc0\x02\n" +
	"\vPrivateInfo\x12 \n" +
	"\fmain_plot_id\x18\x01 \x01(\x05R\n" +
	"mainPlotId\x12\"\n" +
	"\rsub_plots_ids\x18\x02 \x03(\x05R\vsubPlotsIds\x12%\n" +
	"\x0echaracters_ids\x18\x03 \x03(\x05R\rcharactersIds\x12!\n" +
	"\fincident_ids\x18\x04 \x03(\x05R\vincidentIds\x12]\n" +
	"\x10role_assignments\x18\x05 \x03(\v22.tragedylooper.v1.PrivateInfo.RoleAssignmentsEntryR\x0froleAssignments\x1aB\n" +
	"\x14RoleAssignmentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x9d\x02\n" +
	"\n" +
	"PublicInfo\x121\n" +
	"\x10script_config_id\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x0escriptConfigId\x12&\n" +
	"\n" +
	"loop_count\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\tloopCount\x12+\n" +
	"\rdays_per_loop\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\vdaysPerLoop\x12\x1f\n" +
	"\vcan_discuss\x18\x04 \x01(\bR\n" +
	"canDiscuss\x120\n" +
	"\x14special_incident_ids\x18\x05 \x03(\x05R\x12specialIncidentIds\x124\n" +
	"\x16scheduled_incident_ids\x18\x06 \x03(\x05R\x14scheduledIncidentIds\"\x80\x03\n" +
	"\n" +
	"RoleConfig\x12\x17\n" +
	"\x02id\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x02id\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12\x1d\n" +
	"\x05limit\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02(\x01R\x05limit\x12I\n" +
	"\tabilities\x18\x04 \x03(\v2+.tragedylooper.v1.RoleConfig.AbilitiesEntryR\tabilities\x12G\n" +
	"\rgoodwill_rule\x18\x05 \x01(\x0e2\".tragedylooper.v1.GoodwillRuleTypeR\fgoodwillRule\x12*\n" +
	"\x11can_be_invincible\x18\x06 \x01(\bR\x0fcanBeInvincible\x1a]\n" +
	"\x0eAbilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.tragedylooper.v1.AbilityConfigR\x05value:\x028\x01\"\xef\x03\n" +
	"\n" +
	"PlotConfig\x12\x17\n" +
	"\x02id\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x02id\x123\n" +
	"\tplot_type\x18\x02 \x01(\x0e2\x1a.tragedylooper.v1.PlotTypeR\x04type\x12\x1b\n" +
	"\x04name\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12P\n" +
	"\fincident_ids\x18\x05 \x03(\v2-.tragedylooper.v1.PlotConfig.IncidentIdsEntryR\vincidentIds\x12\\\n" +
	"\x10role_assignments\x18\x06 \x03(\v21.tragedylooper.v1.PlotConfig.RoleAssignmentsEntryR\x0froleAssignments\x1a`\n" +
	"\x10IncidentIdsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .tragedylooper.v1.IncidentConfigR\x05value:\x028\x01\x1aB\n" +
	"\x14RoleAssignmentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01B\xbb\x01\n" +
	"\x14com.tragedylooper.v1B\vScriptProtoP\x01Z5github.com/constellation39/tragedyLooper/pkg/proto/v1\xa2\x02\x03TXX\xaa\x02\x10Tragedylooper.V1\xca\x02\x10Tragedylooper\\V1\xe2\x02\x1cTragedylooper\\V1\\GPBMetadata\xea\x02\x11Tragedylooper::V1b\x06proto3"

var (
	file_tragedylooper_v1_script_proto_rawDescOnce sync.Once
	file_tragedylooper_v1_script_proto_rawDescData []byte
)

func file_tragedylooper_v1_script_proto_rawDescGZIP() []byte {
	file_tragedylooper_v1_script_proto_rawDescOnce.Do(func() {
		file_tragedylooper_v1_script_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tragedylooper_v1_script_proto_rawDesc), len(file_tragedylooper_v1_script_proto_rawDesc)))
	})
	return file_tragedylooper_v1_script_proto_rawDescData
}

var file_tragedylooper_v1_script_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_tragedylooper_v1_script_proto_goTypes = []any{
	(*ScriptConfig)(nil),     // 0: tragedylooper.v1.ScriptConfig
	(*ScriptSet)(nil),        // 1: tragedylooper.v1.ScriptSet
	(*DifficultySet)(nil),    // 2: tragedylooper.v1.DifficultySet
	(*IncidentInstance)(nil), // 3: tragedylooper.v1.IncidentInstance
	(*CastRole)(nil),         // 4: tragedylooper.v1.CastRole
	(*CastAssignment)(nil),   // 5: tragedylooper.v1.CastAssignment
	(*ScriptMetadata)(nil),   // 6: tragedylooper.v1.ScriptMetadata
	(*ScriptModel)(nil),      // 7: tragedylooper.v1.ScriptModel
	(*PrivateInfo)(nil),      // 8: tragedylooper.v1.PrivateInfo
	(*PublicInfo)(nil),       // 9: tragedylooper.v1.PublicInfo
	(*RoleConfig)(nil),       // 10: tragedylooper.v1.RoleConfig
	(*PlotConfig)(nil),       // 11: tragedylooper.v1.PlotConfig
	nil,                      // 12: tragedylooper.v1.ScriptConfig.MainPlotsEntry
	nil,                      // 13: tragedylooper.v1.ScriptConfig.SubPlotsEntry
	nil,                      // 14: tragedylooper.v1.ScriptConfig.RolesEntry
	nil,                      // 15: tragedylooper.v1.ScriptConfig.IncidentsEntry
	nil,                      // 16: tragedylooper.v1.ScriptConfig.CharactersEntry
	nil,                      // 17: tragedylooper.v1.ScriptConfig.MastermindCardsEntry
	nil,                      // 18: tragedylooper.v1.ScriptConfig.ProtagonistCardsEntry
	nil,                      // 19: tragedylooper.v1.ScriptConfig.ScriptModelsEntry
	nil,                      // 20: tragedylooper.v1.CastRole.ExtraInfoEntry
	nil,                      // 21: tragedylooper.v1.ScriptMetadata.CastEntry
	nil,                      // 22: tragedylooper.v1.PrivateInfo.RoleAssignmentsEntry
	nil,                      // 23: tragedylooper.v1.RoleConfig.AbilitiesEntry
	nil,                      // 24: tragedylooper.v1.PlotConfig.IncidentIdsEntry
	nil,                      // 25: tragedylooper.v1.PlotConfig.RoleAssignmentsEntry
	(GoodwillRuleType)(0),    // 26: tragedylooper.v1.GoodwillRuleType
	(PlotType)(0),            // 27: tragedylooper.v1.PlotType
	(*IncidentConfig)(nil),   // 28: tragedylooper.v1.IncidentConfig
	(*CharacterConfig)(nil),  // 29: tragedylooper.v1.CharacterConfig
	(*CardConfig)(nil),       // 30: tragedylooper.v1.CardConfig
	(*AbilityConfig)(nil),    // 31: tragedylooper.v1.AbilityConfig
}
var file_tragedylooper_v1_script_proto_depIdxs = []int32{
	12, // 0: tragedylooper.v1.ScriptConfig.main_plots:type_name -> tragedylooper.v1.ScriptConfig.MainPlotsEntry
	13, // 1: tragedylooper.v1.ScriptConfig.sub_plots:type_name -> tragedylooper.v1.ScriptConfig.SubPlotsEntry
	14, // 2: tragedylooper.v1.ScriptConfig.roles:type_name -> tragedylooper.v1.ScriptConfig.RolesEntry
	15, // 3: tragedylooper.v1.ScriptConfig.incidents:type_name -> tragedylooper.v1.ScriptConfig.IncidentsEntry
	16, // 4: tragedylooper.v1.ScriptConfig.characters:type_name -> tragedylooper.v1.ScriptConfig.CharactersEntry
	17, // 5: tragedylooper.v1.ScriptConfig.mastermind_cards:type_name -> tragedylooper.v1.ScriptConfig.MastermindCardsEntry
	18, // 6: tragedylooper.v1.ScriptConfig.protagonist_cards:type_name -> tragedylooper.v1.ScriptConfig.ProtagonistCardsEntry
	19, // 7: tragedylooper.v1.ScriptConfig.script_models:type_name -> tragedylooper.v1.ScriptConfig.ScriptModelsEntry
	20, // 8: tragedylooper.v1.CastRole.extra_info:type_name -> tragedylooper.v1.CastRole.ExtraInfoEntry
	4,  // 9: tragedylooper.v1.CastAssignment.role_with_extra:type_name -> tragedylooper.v1.CastRole
	1,  // 10: tragedylooper.v1.ScriptMetadata.set:type_name -> tragedylooper.v1.ScriptSet
	2,  // 11: tragedylooper.v1.ScriptMetadata.difficulty_sets:type_name -> tragedylooper.v1.DifficultySet
	21, // 12: tragedylooper.v1.ScriptMetadata.cast:type_name -> tragedylooper.v1.ScriptMetadata.CastEntry
	3,  // 13: tragedylooper.v1.ScriptMetadata.incidents:type_name -> tragedylooper.v1.IncidentInstance
	8,  // 14: tragedylooper.v1.ScriptModel.private_info:type_name -> tragedylooper.v1.PrivateInfo
	9,  // 15: tragedylooper.v1.ScriptModel.public_info:type_name -> tragedylooper.v1.PublicInfo
	6,  // 16: tragedylooper.v1.ScriptModel.metadata:type_name -> tragedylooper.v1.ScriptMetadata
	22, // 17: tragedylooper.v1.PrivateInfo.role_assignments:type_name -> tragedylooper.v1.PrivateInfo.RoleAssignmentsEntry
	23, // 18: tragedylooper.v1.RoleConfig.abilities:type_name -> tragedylooper.v1.RoleConfig.AbilitiesEntry
	26, // 19: tragedylooper.v1.RoleConfig.goodwill_rule:type_name -> tragedylooper.v1.GoodwillRuleType
	27, // 20: tragedylooper.v1.PlotConfig.plot_type:type_name -> tragedylooper.v1.PlotType
	24, // 21: tragedylooper.v1.PlotConfig.incident_ids:type_name -> tragedylooper.v1.PlotConfig.IncidentIdsEntry
	25, // 22: tragedylooper.v1.PlotConfig.role_assignments:type_name -> tragedylooper.v1.PlotConfig.RoleAssignmentsEntry
	11, // 23: tragedylooper.v1.ScriptConfig.MainPlotsEntry.value:type_name -> tragedylooper.v1.PlotConfig
	11, // 24: tragedylooper.v1.ScriptConfig.SubPlotsEntry.value:type_name -> tragedylooper.v1.PlotConfig
	10, // 25: tragedylooper.v1.ScriptConfig.RolesEntry.value:type_name -> tragedylooper.v1.RoleConfig
	28, // 26: tragedylooper.v1.ScriptConfig.IncidentsEntry.value:type_name -> tragedylooper.v1.IncidentConfig
	29, // 27: tragedylooper.v1.ScriptConfig.CharactersEntry.value:type_name -> tragedylooper.v1.CharacterConfig
	30, // 28: tragedylooper.v1.ScriptConfig.MastermindCardsEntry.value:type_name -> tragedylooper.v1.CardConfig
	30, // 29: tragedylooper.v1.ScriptConfig.ProtagonistCardsEntry.value:type_name -> tragedylooper.v1.CardConfig
	7,  // 30: tragedylooper.v1.ScriptConfig.ScriptModelsEntry.value:type_name -> tragedylooper.v1.ScriptModel
	5,  // 31: tragedylooper.v1.ScriptMetadata.CastEntry.value:type_name -> tragedylooper.v1.CastAssignment
	31, // 32: tragedylooper.v1.RoleConfig.AbilitiesEntry.value:type_name -> tragedylooper.v1.AbilityConfig
	28, // 33: tragedylooper.v1.PlotConfig.IncidentIdsEntry.value:type_name -> tragedylooper.v1.IncidentConfig
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_tragedylooper_v1_script_proto_init() }
func file_tragedylooper_v1_script_proto_init() {
	if File_tragedylooper_v1_script_proto != nil {
		return
	}
	file_tragedylooper_v1_enums_proto_init()
	file_tragedylooper_v1_incident_proto_init()
	file_tragedylooper_v1_character_proto_init()
	file_tragedylooper_v1_card_proto_init()
	file_tragedylooper_v1_ability_proto_init()
	file_tragedylooper_v1_script_proto_msgTypes[5].OneofWrappers = []any{
		(*CastAssignment_RoleName)(nil),
		(*CastAssignment_RoleWithExtra)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tragedylooper_v1_script_proto_rawDesc), len(file_tragedylooper_v1_script_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tragedylooper_v1_script_proto_goTypes,
		DependencyIndexes: file_tragedylooper_v1_script_proto_depIdxs,
		MessageInfos:      file_tragedylooper_v1_script_proto_msgTypes,
	}.Build()
	File_tragedylooper_v1_script_proto = out.File
	file_tragedylooper_v1_script_proto_goTypes = nil
	file_tragedylooper_v1_script_proto_depIdxs = nil
}
