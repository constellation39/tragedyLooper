// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/enums.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 玩家角色
type PlayerRole int32

const (
	PlayerRole_PLAYER_ROLE_UNSPECIFIED PlayerRole = 0 // 未指定
	PlayerRole_MASTERMIND              PlayerRole = 1 // 主谋
	PlayerRole_PROTAGONIST             PlayerRole = 2 // 主角
)

// Enum value maps for PlayerRole.
var (
	PlayerRole_name = map[int32]string{
		0: "PLAYER_ROLE_UNSPECIFIED",
		1: "MASTERMIND",
		2: "PROTAGONIST",
	}
	PlayerRole_value = map[string]int32{
		"PLAYER_ROLE_UNSPECIFIED": 0,
		"MASTERMIND":              1,
		"PROTAGONIST":             2,
	}
)

func (x PlayerRole) Enum() *PlayerRole {
	p := new(PlayerRole)
	*p = x
	return p
}

func (x PlayerRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerRole) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[0].Descriptor()
}

func (PlayerRole) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[0]
}

func (x PlayerRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerRole.Descriptor instead.
func (PlayerRole) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{0}
}

// 游戏阶段
type GamePhase int32

const (
	GamePhase_GAME_PHASE_UNSPECIFIED GamePhase = 0  // 未指定
	GamePhase_SETUP                  GamePhase = 1  // 游戏设置阶段
	GamePhase_MASTERMIND_SETUP       GamePhase = 2  // 主谋设置阶段
	GamePhase_LOOP_START             GamePhase = 3  // 循环开始阶段
	GamePhase_DAY_START              GamePhase = 4  // 日开始阶段
	GamePhase_CARD_PLAY              GamePhase = 5  // 卡牌打出阶段
	GamePhase_CARD_REVEAL            GamePhase = 6  // 卡牌揭示阶段
	GamePhase_CARD_EFFECTS           GamePhase = 7  // 卡牌效果阶段
	GamePhase_ABILITIES              GamePhase = 8  // 能力结算阶段
	GamePhase_INCIDENTS              GamePhase = 9  // 事件结算阶段
	GamePhase_DAY_END                GamePhase = 10 // 日结束阶段
	GamePhase_LOOP_END               GamePhase = 11 // 循环结束阶段
	GamePhase_PROTAGONIST_GUESS      GamePhase = 12 // 主角推理阶段
	GamePhase_GAME_OVER              GamePhase = 13 // 游戏结束阶段
)

// Enum value maps for GamePhase.
var (
	GamePhase_name = map[int32]string{
		0:  "GAME_PHASE_UNSPECIFIED",
		1:  "SETUP",
		2:  "MASTERMIND_SETUP",
		3:  "LOOP_START",
		4:  "DAY_START",
		5:  "CARD_PLAY",
		6:  "CARD_REVEAL",
		7:  "CARD_EFFECTS",
		8:  "ABILITIES",
		9:  "INCIDENTS",
		10: "DAY_END",
		11: "LOOP_END",
		12: "PROTAGONIST_GUESS",
		13: "GAME_OVER",
	}
	GamePhase_value = map[string]int32{
		"GAME_PHASE_UNSPECIFIED": 0,
		"SETUP":                  1,
		"MASTERMIND_SETUP":       2,
		"LOOP_START":             3,
		"DAY_START":              4,
		"CARD_PLAY":              5,
		"CARD_REVEAL":            6,
		"CARD_EFFECTS":           7,
		"ABILITIES":              8,
		"INCIDENTS":              9,
		"DAY_END":                10,
		"LOOP_END":               11,
		"PROTAGONIST_GUESS":      12,
		"GAME_OVER":              13,
	}
)

func (x GamePhase) Enum() *GamePhase {
	p := new(GamePhase)
	*p = x
	return p
}

func (x GamePhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GamePhase) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[1].Descriptor()
}

func (GamePhase) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[1]
}

func (x GamePhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GamePhase.Descriptor instead.
func (GamePhase) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{1}
}

// 卡牌类型
type CardType int32

const (
	CardType_CARD_TYPE_UNSPECIFIED    CardType = 0  // 未指定
	CardType_MOVE_HORIZONTALLY        CardType = 1  // 水平移动
	CardType_PARANOIA_PLUS            CardType = 2  // 增加妄想
	CardType_PARANOIA_MINUS           CardType = 3  // 减少妄想
	CardType_GOODWILL_PLUS            CardType = 4  // 增加好感
	CardType_GOODWILL_MINUS           CardType = 5  // 减少好感
	CardType_INTRIGUE_PLUS            CardType = 6  // 增加阴谋
	CardType_FORBID_MOVEMENT          CardType = 7  // 禁止移动
	CardType_FORBID_PARANOIA_INCREASE CardType = 8  // 禁止妄想增加
	CardType_FORBID_GOODWILL_INCREASE CardType = 9  // 禁止好感增加
	CardType_FORBID_INTRIGUE_INCREASE CardType = 10 // 禁止阴谋增加
	CardType_MOVE_VERTICALLY          CardType = 11 // 垂直移动
	CardType_MOVE_DIAGONALLY          CardType = 12 // 对角移动
	CardType_ADD_PARANOIA             CardType = 13
	CardType_ADD_GOODWILL             CardType = 14
	CardType_ADD_INTRIGUE             CardType = 15
)

// Enum value maps for CardType.
var (
	CardType_name = map[int32]string{
		0:  "CARD_TYPE_UNSPECIFIED",
		1:  "MOVE_HORIZONTALLY",
		2:  "PARANOIA_PLUS",
		3:  "PARANOIA_MINUS",
		4:  "GOODWILL_PLUS",
		5:  "GOODWILL_MINUS",
		6:  "INTRIGUE_PLUS",
		7:  "FORBID_MOVEMENT",
		8:  "FORBID_PARANOIA_INCREASE",
		9:  "FORBID_GOODWILL_INCREASE",
		10: "FORBID_INTRIGUE_INCREASE",
		11: "MOVE_VERTICALLY",
		12: "MOVE_DIAGONALLY",
		13: "ADD_PARANOIA",
		14: "ADD_GOODWILL",
		15: "ADD_INTRIGUE",
	}
	CardType_value = map[string]int32{
		"CARD_TYPE_UNSPECIFIED":    0,
		"MOVE_HORIZONTALLY":        1,
		"PARANOIA_PLUS":            2,
		"PARANOIA_MINUS":           3,
		"GOODWILL_PLUS":            4,
		"GOODWILL_MINUS":           5,
		"INTRIGUE_PLUS":            6,
		"FORBID_MOVEMENT":          7,
		"FORBID_PARANOIA_INCREASE": 8,
		"FORBID_GOODWILL_INCREASE": 9,
		"FORBID_INTRIGUE_INCREASE": 10,
		"MOVE_VERTICALLY":          11,
		"MOVE_DIAGONALLY":          12,
		"ADD_PARANOIA":             13,
		"ADD_GOODWILL":             14,
		"ADD_INTRIGUE":             15,
	}
)

func (x CardType) Enum() *CardType {
	p := new(CardType)
	*p = x
	return p
}

func (x CardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[2].Descriptor()
}

func (CardType) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[2]
}

func (x CardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardType.Descriptor instead.
func (CardType) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{2}
}

// 角色身份类型
type RoleType int32

const (
	RoleType_ROLE_TYPE_UNSPECIFIED RoleType = 0  // 未指定
	RoleType_PERSON                RoleType = 1  // 普通人
	RoleType_KILLER                RoleType = 2  // 杀手
	RoleType_BRAIN                 RoleType = 3  // 洗脑者
	RoleType_KEY_PERSON            RoleType = 4  // 关键人物
	RoleType_CULTIST               RoleType = 5  // 邪教徒
	RoleType_FRIEND                RoleType = 6  // 朋友
	RoleType_LOVED_ONE             RoleType = 7  // 恋人
	RoleType_CONSPIRACY_THEORIST   RoleType = 8  // 阴谋论者
	RoleType_SERIAL_KILLER         RoleType = 9  // 连环杀手
	RoleType_FACTOR                RoleType = 10 // X因素
	RoleType_WITCH                 RoleType = 11 // 女巫
	RoleType_TIME_TRAVELER         RoleType = 12 // 时间旅行者
)

// Enum value maps for RoleType.
var (
	RoleType_name = map[int32]string{
		0:  "ROLE_TYPE_UNSPECIFIED",
		1:  "PERSON",
		2:  "KILLER",
		3:  "BRAIN",
		4:  "KEY_PERSON",
		5:  "CULTIST",
		6:  "FRIEND",
		7:  "LOVED_ONE",
		8:  "CONSPIRACY_THEORIST",
		9:  "SERIAL_KILLER",
		10: "FACTOR",
		11: "WITCH",
		12: "TIME_TRAVELER",
	}
	RoleType_value = map[string]int32{
		"ROLE_TYPE_UNSPECIFIED": 0,
		"PERSON":                1,
		"KILLER":                2,
		"BRAIN":                 3,
		"KEY_PERSON":            4,
		"CULTIST":               5,
		"FRIEND":                6,
		"LOVED_ONE":             7,
		"CONSPIRACY_THEORIST":   8,
		"SERIAL_KILLER":         9,
		"FACTOR":                10,
		"WITCH":                 11,
		"TIME_TRAVELER":         12,
	}
)

func (x RoleType) Enum() *RoleType {
	p := new(RoleType)
	*p = x
	return p
}

func (x RoleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoleType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[3].Descriptor()
}

func (RoleType) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[3]
}

func (x RoleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoleType.Descriptor instead.
func (RoleType) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{3}
}

// 事件类型
type IncidentType int32

const (
	IncidentType_INCIDENT_TYPE_UNSPECIFIED IncidentType = 0 // 未指定
	IncidentType_MURDER                    IncidentType = 1 // 杀人事件
	IncidentType_SUICIDE                   IncidentType = 2 // 自杀
	IncidentType_ACCIDENT                  IncidentType = 3 // 意外死亡
	IncidentType_DISAPPEARANCE             IncidentType = 4 // 失踪
	IncidentType_HOSPITAL_CONSPIRACY       IncidentType = 5 // 医院阴谋
	IncidentType_MURDER_MYSTERY            IncidentType = 6 // 谋杀之谜
	IncidentType_PANIC                     IncidentType = 7 // 恐慌爆发
)

// Enum value maps for IncidentType.
var (
	IncidentType_name = map[int32]string{
		0: "INCIDENT_TYPE_UNSPECIFIED",
		1: "MURDER",
		2: "SUICIDE",
		3: "ACCIDENT",
		4: "DISAPPEARANCE",
		5: "HOSPITAL_CONSPIRACY",
		6: "MURDER_MYSTERY",
		7: "PANIC",
	}
	IncidentType_value = map[string]int32{
		"INCIDENT_TYPE_UNSPECIFIED": 0,
		"MURDER":                    1,
		"SUICIDE":                   2,
		"ACCIDENT":                  3,
		"DISAPPEARANCE":             4,
		"HOSPITAL_CONSPIRACY":       5,
		"MURDER_MYSTERY":            6,
		"PANIC":                     7,
	}
)

func (x IncidentType) Enum() *IncidentType {
	p := new(IncidentType)
	*p = x
	return p
}

func (x IncidentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IncidentType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[4].Descriptor()
}

func (IncidentType) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[4]
}

func (x IncidentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IncidentType.Descriptor instead.
func (IncidentType) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{4}
}

// 悲剧集合类型
type TragedySetType int32

const (
	TragedySetType_TRAGEDY_SET_TYPE_UNSPECIFIED TragedySetType = 0 // 未指定
	TragedySetType_BASIC_TRAGEDY                TragedySetType = 1 // 基础悲剧
	TragedySetType_FIRST_STEP                   TragedySetType = 2 // 最初的悲剧
	TragedySetType_MIDNIGHT_ZONE                TragedySetType = 3 // 午夜禁区
	TragedySetType_GHOSTLY_MIST                 TragedySetType = 4 // 魅影薄雾
)

// Enum value maps for TragedySetType.
var (
	TragedySetType_name = map[int32]string{
		0: "TRAGEDY_SET_TYPE_UNSPECIFIED",
		1: "BASIC_TRAGEDY",
		2: "FIRST_STEP",
		3: "MIDNIGHT_ZONE",
		4: "GHOSTLY_MIST",
	}
	TragedySetType_value = map[string]int32{
		"TRAGEDY_SET_TYPE_UNSPECIFIED": 0,
		"BASIC_TRAGEDY":                1,
		"FIRST_STEP":                   2,
		"MIDNIGHT_ZONE":                3,
		"GHOSTLY_MIST":                 4,
	}
)

func (x TragedySetType) Enum() *TragedySetType {
	p := new(TragedySetType)
	*p = x
	return p
}

func (x TragedySetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TragedySetType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[5].Descriptor()
}

func (TragedySetType) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[5]
}

func (x TragedySetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TragedySetType.Descriptor instead.
func (TragedySetType) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{5}
}

// 剧本难度
type ScriptDifficulty int32

const (
	ScriptDifficulty_SCRIPT_DIFFICULTY_UNSPECIFIED ScriptDifficulty = 0 // 未指定
	ScriptDifficulty_EASY                          ScriptDifficulty = 1 // 简单
	ScriptDifficulty_NORMAL                        ScriptDifficulty = 2 // 普通
	ScriptDifficulty_HARD                          ScriptDifficulty = 3 // 困难
	ScriptDifficulty_EXPERT                        ScriptDifficulty = 4 // 专家
)

// Enum value maps for ScriptDifficulty.
var (
	ScriptDifficulty_name = map[int32]string{
		0: "SCRIPT_DIFFICULTY_UNSPECIFIED",
		1: "EASY",
		2: "NORMAL",
		3: "HARD",
		4: "EXPERT",
	}
	ScriptDifficulty_value = map[string]int32{
		"SCRIPT_DIFFICULTY_UNSPECIFIED": 0,
		"EASY":                          1,
		"NORMAL":                        2,
		"HARD":                          3,
		"EXPERT":                        4,
	}
)

func (x ScriptDifficulty) Enum() *ScriptDifficulty {
	p := new(ScriptDifficulty)
	*p = x
	return p
}

func (x ScriptDifficulty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScriptDifficulty) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[6].Descriptor()
}

func (ScriptDifficulty) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[6]
}

func (x ScriptDifficulty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScriptDifficulty.Descriptor instead.
func (ScriptDifficulty) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{6}
}

// 剧情类型
type PlotType int32

const (
	PlotType_PLOT_TYPE_UNSPECIFIED PlotType = 0 // 未指定
	PlotType_MAIN_PLOT             PlotType = 1 // 主线剧情
	PlotType_SUB_PLOT              PlotType = 2 // 支线剧情
)

// Enum value maps for PlotType.
var (
	PlotType_name = map[int32]string{
		0: "PLOT_TYPE_UNSPECIFIED",
		1: "MAIN_PLOT",
		2: "SUB_PLOT",
	}
	PlotType_value = map[string]int32{
		"PLOT_TYPE_UNSPECIFIED": 0,
		"MAIN_PLOT":             1,
		"SUB_PLOT":              2,
	}
)

func (x PlotType) Enum() *PlotType {
	p := new(PlotType)
	*p = x
	return p
}

func (x PlotType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlotType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[7].Descriptor()
}

func (PlotType) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[7]
}

func (x PlotType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlotType.Descriptor instead.
func (PlotType) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{7}
}

// 地点类型（也可通过LocationConfig扩展）
type LocationType int32

const (
	LocationType_LOCATION_TYPE_UNSPECIFIED LocationType = 0 // 未指定
	LocationType_HOSPITAL                  LocationType = 1 // 医院
	LocationType_SHRINE                    LocationType = 2 // 神社
	LocationType_CITY                      LocationType = 3 // 城市
	LocationType_SCHOOL                    LocationType = 4 // 学校
)

// Enum value maps for LocationType.
var (
	LocationType_name = map[int32]string{
		0: "LOCATION_TYPE_UNSPECIFIED",
		1: "HOSPITAL",
		2: "SHRINE",
		3: "CITY",
		4: "SCHOOL",
	}
	LocationType_value = map[string]int32{
		"LOCATION_TYPE_UNSPECIFIED": 0,
		"HOSPITAL":                  1,
		"SHRINE":                    2,
		"CITY":                      3,
		"SCHOOL":                    4,
	}
)

func (x LocationType) Enum() *LocationType {
	p := new(LocationType)
	*p = x
	return p
}

func (x LocationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocationType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[8].Descriptor()
}

func (LocationType) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[8]
}

func (x LocationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LocationType.Descriptor instead.
func (LocationType) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{8}
}

// 触发器类型（能力或规则何时触发）
type TriggerType int32

const (
	TriggerType_TRIGGER_TYPE_UNSPECIFIED TriggerType = 0  // 未指定
	TriggerType_ON_GAME_SETUP            TriggerType = 1  // 游戏设置时
	TriggerType_ON_LOOP_START            TriggerType = 2  // 循环开始时
	TriggerType_ON_DAY_START             TriggerType = 3  // 每天开始时
	TriggerType_ON_PHASE_START           TriggerType = 4  // 特定阶段开始时（需配合GamePhase）
	TriggerType_ON_PHASE_END             TriggerType = 5  // 特定阶段结束时（需配合GamePhase）
	TriggerType_ON_GAME_EVENT            TriggerType = 6  // 发生特定游戏事件时
	TriggerType_ON_PASSIVE               TriggerType = 7  // 被动（条件满足时持续生效）
	TriggerType_ON_GUESS_MADE            TriggerType = 8  // 推理发生时
	TriggerType_ON_GAME_END              TriggerType = 9  // 游戏结束时
	TriggerType_ON_DAY_END               TriggerType = 10 // 每日结束时
	TriggerType_ON_LOOP_END              TriggerType = 11 // 循环结束时
)

// Enum value maps for TriggerType.
var (
	TriggerType_name = map[int32]string{
		0:  "TRIGGER_TYPE_UNSPECIFIED",
		1:  "ON_GAME_SETUP",
		2:  "ON_LOOP_START",
		3:  "ON_DAY_START",
		4:  "ON_PHASE_START",
		5:  "ON_PHASE_END",
		6:  "ON_GAME_EVENT",
		7:  "ON_PASSIVE",
		8:  "ON_GUESS_MADE",
		9:  "ON_GAME_END",
		10: "ON_DAY_END",
		11: "ON_LOOP_END",
	}
	TriggerType_value = map[string]int32{
		"TRIGGER_TYPE_UNSPECIFIED": 0,
		"ON_GAME_SETUP":            1,
		"ON_LOOP_START":            2,
		"ON_DAY_START":             3,
		"ON_PHASE_START":           4,
		"ON_PHASE_END":             5,
		"ON_GAME_EVENT":            6,
		"ON_PASSIVE":               7,
		"ON_GUESS_MADE":            8,
		"ON_GAME_END":              9,
		"ON_DAY_END":               10,
		"ON_LOOP_END":              11,
	}
)

func (x TriggerType) Enum() *TriggerType {
	p := new(TriggerType)
	*p = x
	return p
}

func (x TriggerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[9].Descriptor()
}

func (TriggerType) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[9]
}

func (x TriggerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerType.Descriptor instead.
func (TriggerType) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{9}
}

// 游戏事件类型（用于能力触发器过滤）
type GameEventType int32

const (
	GameEventType_GAME_EVENT_TYPE_UNSPECIFIED GameEventType = 0  // 未指定
	GameEventType_CHARACTER_MOVED             GameEventType = 1  // 角色移动事件
	GameEventType_PARANOIA_ADJUSTED           GameEventType = 2  // 妄想值调整事件
	GameEventType_GOODWILL_ADJUSTED           GameEventType = 3  // 好感值调整事件
	GameEventType_INTRIGUE_ADJUSTED           GameEventType = 4  // 阴谋值调整事件
	GameEventType_INCIDENT_TRIGGERED          GameEventType = 5  // 悲剧触发事件
	GameEventType_INCIDENT_PREVENTED          GameEventType = 6  // 悲剧阻止事件
	GameEventType_ROLE_REVEALED               GameEventType = 7  // 角色身份揭示事件
	GameEventType_ABILITY_GRANTED             GameEventType = 8  // 授予能力事件
	GameEventType_CHOICE_REQUIRED             GameEventType = 9  // 需要玩家选择事件
	GameEventType_LOOP_WIN                    GameEventType = 10 // 循环胜利事件
	GameEventType_LOOP_LOSS                   GameEventType = 11 // 循环失败事件
	GameEventType_FIRST_GUESS_MADE            GameEventType = 12 // 首次猜测事件
	GameEventType_FINAL_GUESS_MADE            GameEventType = 13 // 最终猜测事件
	GameEventType_GOODWILL_REFUSAL_TEST       GameEventType = 14 // 好感度拒绝测试事件
	GameEventType_LOOP_OVER                   GameEventType = 15 // 循环结束事件
	GameEventType_DAY_ADVANCED                GameEventType = 16 // 天数推进事件
	GameEventType_TRAGEDY_TRIGGERED           GameEventType = 17 // 悲剧触发事件
	GameEventType_LOOP_RESET                  GameEventType = 18 // 循环重置事件
	GameEventType_TRAIT_ADDED                 GameEventType = 19 // 特性添加事件
	GameEventType_TRAIT_REMOVED               GameEventType = 20 // 特性移除事件
	GameEventType_CARD_PLAYED                 GameEventType = 21 // 卡牌打出事件
	GameEventType_CARD_REVEALED               GameEventType = 22 // 卡牌揭示事件
	GameEventType_GAME_ENDED                  GameEventType = 23 // 游戏结束事件
	GameEventType_PLAYER_ACTION               GameEventType = 24 // 玩家行动事件
)

// Enum value maps for GameEventType.
var (
	GameEventType_name = map[int32]string{
		0:  "GAME_EVENT_TYPE_UNSPECIFIED",
		1:  "CHARACTER_MOVED",
		2:  "PARANOIA_ADJUSTED",
		3:  "GOODWILL_ADJUSTED",
		4:  "INTRIGUE_ADJUSTED",
		5:  "INCIDENT_TRIGGERED",
		6:  "INCIDENT_PREVENTED",
		7:  "ROLE_REVEALED",
		8:  "ABILITY_GRANTED",
		9:  "CHOICE_REQUIRED",
		10: "LOOP_WIN",
		11: "LOOP_LOSS",
		12: "FIRST_GUESS_MADE",
		13: "FINAL_GUESS_MADE",
		14: "GOODWILL_REFUSAL_TEST",
		15: "LOOP_OVER",
		16: "DAY_ADVANCED",
		17: "TRAGEDY_TRIGGERED",
		18: "LOOP_RESET",
		19: "TRAIT_ADDED",
		20: "TRAIT_REMOVED",
		21: "CARD_PLAYED",
		22: "CARD_REVEALED",
		23: "GAME_ENDED",
		24: "PLAYER_ACTION",
	}
	GameEventType_value = map[string]int32{
		"GAME_EVENT_TYPE_UNSPECIFIED": 0,
		"CHARACTER_MOVED":             1,
		"PARANOIA_ADJUSTED":           2,
		"GOODWILL_ADJUSTED":           3,
		"INTRIGUE_ADJUSTED":           4,
		"INCIDENT_TRIGGERED":          5,
		"INCIDENT_PREVENTED":          6,
		"ROLE_REVEALED":               7,
		"ABILITY_GRANTED":             8,
		"CHOICE_REQUIRED":             9,
		"LOOP_WIN":                    10,
		"LOOP_LOSS":                   11,
		"FIRST_GUESS_MADE":            12,
		"FINAL_GUESS_MADE":            13,
		"GOODWILL_REFUSAL_TEST":       14,
		"LOOP_OVER":                   15,
		"DAY_ADVANCED":                16,
		"TRAGEDY_TRIGGERED":           17,
		"LOOP_RESET":                  18,
		"TRAIT_ADDED":                 19,
		"TRAIT_REMOVED":               20,
		"CARD_PLAYED":                 21,
		"CARD_REVEALED":               22,
		"GAME_ENDED":                  23,
		"PLAYER_ACTION":               24,
	}
)

func (x GameEventType) Enum() *GameEventType {
	p := new(GameEventType)
	*p = x
	return p
}

func (x GameEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[10].Descriptor()
}

func (GameEventType) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[10]
}

func (x GameEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameEventType.Descriptor instead.
func (GameEventType) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{10}
}

// 游戏结束条件类型
type EndConditionType int32

const (
	EndConditionType_END_CONDITION_TYPE_UNSPECIFIED EndConditionType = 0 // 未指定
	EndConditionType_PROTAGONIST_GUESS_SUCCESS      EndConditionType = 1 // 主角推理成功
	EndConditionType_PROTAGONIST_GUESS_FAIL         EndConditionType = 2 // 主角推理失败
	EndConditionType_MAX_LOOPS_REACHED              EndConditionType = 3 // 达到最大循环次数
	EndConditionType_SPECIFIC_INCIDENT_TRIGGERED    EndConditionType = 4 // 特定事件触发
	EndConditionType_ALL_INCIDENTS_PREVENTED        EndConditionType = 5 // 所有（指定）事件被阻止
	EndConditionType_CUSTOM_CONDITION               EndConditionType = 6 // 自定义条件（通过Condition组合）
)

// Enum value maps for EndConditionType.
var (
	EndConditionType_name = map[int32]string{
		0: "END_CONDITION_TYPE_UNSPECIFIED",
		1: "PROTAGONIST_GUESS_SUCCESS",
		2: "PROTAGONIST_GUESS_FAIL",
		3: "MAX_LOOPS_REACHED",
		4: "SPECIFIC_INCIDENT_TRIGGERED",
		5: "ALL_INCIDENTS_PREVENTED",
		6: "CUSTOM_CONDITION",
	}
	EndConditionType_value = map[string]int32{
		"END_CONDITION_TYPE_UNSPECIFIED": 0,
		"PROTAGONIST_GUESS_SUCCESS":      1,
		"PROTAGONIST_GUESS_FAIL":         2,
		"MAX_LOOPS_REACHED":              3,
		"SPECIFIC_INCIDENT_TRIGGERED":    4,
		"ALL_INCIDENTS_PREVENTED":        5,
		"CUSTOM_CONDITION":               6,
	}
)

func (x EndConditionType) Enum() *EndConditionType {
	p := new(EndConditionType)
	*p = x
	return p
}

func (x EndConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EndConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[11].Descriptor()
}

func (EndConditionType) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[11]
}

func (x EndConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EndConditionType.Descriptor instead.
func (EndConditionType) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{11}
}

type ForbidType int32

const (
	ForbidType_FORBID_TYPE_UNSPECIFIED ForbidType = 0
	ForbidType_MOVEMENT                ForbidType = 1
	ForbidType_PARANOIA_CHANGE         ForbidType = 2
	ForbidType_GOODWILL_CHANGE         ForbidType = 3
	ForbidType_INTRIGUE_CHANGE         ForbidType = 4
)

// Enum value maps for ForbidType.
var (
	ForbidType_name = map[int32]string{
		0: "FORBID_TYPE_UNSPECIFIED",
		1: "MOVEMENT",
		2: "PARANOIA_CHANGE",
		3: "GOODWILL_CHANGE",
		4: "INTRIGUE_CHANGE",
	}
	ForbidType_value = map[string]int32{
		"FORBID_TYPE_UNSPECIFIED": 0,
		"MOVEMENT":                1,
		"PARANOIA_CHANGE":         2,
		"GOODWILL_CHANGE":         3,
		"INTRIGUE_CHANGE":         4,
	}
)

func (x ForbidType) Enum() *ForbidType {
	p := new(ForbidType)
	*p = x
	return p
}

func (x ForbidType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForbidType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_enums_proto_enumTypes[12].Descriptor()
}

func (ForbidType) Type() protoreflect.EnumType {
	return &file_v1_enums_proto_enumTypes[12]
}

func (x ForbidType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForbidType.Descriptor instead.
func (ForbidType) EnumDescriptor() ([]byte, []int) {
	return file_v1_enums_proto_rawDescGZIP(), []int{12}
}

var File_v1_enums_proto protoreflect.FileDescriptor

const file_v1_enums_proto_rawDesc = "" +
	"\n" +
	"\x0ev1/enums.proto\x12\x02v1*J\n" +
	"\n" +
	"PlayerRole\x12\x1b\n" +
	"\x17PLAYER_ROLE_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"MASTERMIND\x10\x01\x12\x0f\n" +
	"\vPROTAGONIST\x10\x02*\xf8\x01\n" +
	"\tGamePhase\x12\x1a\n" +
	"\x16GAME_PHASE_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05SETUP\x10\x01\x12\x14\n" +
	"\x10MASTERMIND_SETUP\x10\x02\x12\x0e\n" +
	"\n" +
	"LOOP_START\x10\x03\x12\r\n" +
	"\tDAY_START\x10\x04\x12\r\n" +
	"\tCARD_PLAY\x10\x05\x12\x0f\n" +
	"\vCARD_REVEAL\x10\x06\x12\x10\n" +
	"\fCARD_EFFECTS\x10\a\x12\r\n" +
	"\tABILITIES\x10\b\x12\r\n" +
	"\tINCIDENTS\x10\t\x12\v\n" +
	"\aDAY_END\x10\n" +
	"\x12\f\n" +
	"\bLOOP_END\x10\v\x12\x15\n" +
	"\x11PROTAGONIST_GUESS\x10\f\x12\r\n" +
	"\tGAME_OVER\x10\r*\xec\x02\n" +
	"\bCardType\x12\x19\n" +
	"\x15CARD_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11MOVE_HORIZONTALLY\x10\x01\x12\x11\n" +
	"\rPARANOIA_PLUS\x10\x02\x12\x12\n" +
	"\x0ePARANOIA_MINUS\x10\x03\x12\x11\n" +
	"\rGOODWILL_PLUS\x10\x04\x12\x12\n" +
	"\x0eGOODWILL_MINUS\x10\x05\x12\x11\n" +
	"\rINTRIGUE_PLUS\x10\x06\x12\x13\n" +
	"\x0fFORBID_MOVEMENT\x10\a\x12\x1c\n" +
	"\x18FORBID_PARANOIA_INCREASE\x10\b\x12\x1c\n" +
	"\x18FORBID_GOODWILL_INCREASE\x10\t\x12\x1c\n" +
	"\x18FORBID_INTRIGUE_INCREASE\x10\n" +
	"\x12\x13\n" +
	"\x0fMOVE_VERTICALLY\x10\v\x12\x13\n" +
	"\x0fMOVE_DIAGONALLY\x10\f\x12\x10\n" +
	"\fADD_PARANOIA\x10\r\x12\x10\n" +
	"\fADD_GOODWILL\x10\x0e\x12\x10\n" +
	"\fADD_INTRIGUE\x10\x0f*\xd6\x01\n" +
	"\bRoleType\x12\x19\n" +
	"\x15ROLE_TYPE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06PERSON\x10\x01\x12\n" +
	"\n" +
	"\x06KILLER\x10\x02\x12\t\n" +
	"\x05BRAIN\x10\x03\x12\x0e\n" +
	"\n" +
	"KEY_PERSON\x10\x04\x12\v\n" +
	"\aCULTIST\x10\x05\x12\n" +
	"\n" +
	"\x06FRIEND\x10\x06\x12\r\n" +
	"\tLOVED_ONE\x10\a\x12\x17\n" +
	"\x13CONSPIRACY_THEORIST\x10\b\x12\x11\n" +
	"\rSERIAL_KILLER\x10\t\x12\n" +
	"\n" +
	"\x06FACTOR\x10\n" +
	"\x12\t\n" +
	"\x05WITCH\x10\v\x12\x11\n" +
	"\rTIME_TRAVELER\x10\f*\x9f\x01\n" +
	"\fIncidentType\x12\x1d\n" +
	"\x19INCIDENT_TYPE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06MURDER\x10\x01\x12\v\n" +
	"\aSUICIDE\x10\x02\x12\f\n" +
	"\bACCIDENT\x10\x03\x12\x11\n" +
	"\rDISAPPEARANCE\x10\x04\x12\x17\n" +
	"\x13HOSPITAL_CONSPIRACY\x10\x05\x12\x12\n" +
	"\x0eMURDER_MYSTERY\x10\x06\x12\t\n" +
	"\x05PANIC\x10\a*z\n" +
	"\x0eTragedySetType\x12 \n" +
	"\x1cTRAGEDY_SET_TYPE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rBASIC_TRAGEDY\x10\x01\x12\x0e\n" +
	"\n" +
	"FIRST_STEP\x10\x02\x12\x11\n" +
	"\rMIDNIGHT_ZONE\x10\x03\x12\x10\n" +
	"\fGHOSTLY_MIST\x10\x04*a\n" +
	"\x10ScriptDifficulty\x12!\n" +
	"\x1dSCRIPT_DIFFICULTY_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04EASY\x10\x01\x12\n" +
	"\n" +
	"\x06NORMAL\x10\x02\x12\b\n" +
	"\x04HARD\x10\x03\x12\n" +
	"\n" +
	"\x06EXPERT\x10\x04*B\n" +
	"\bPlotType\x12\x19\n" +
	"\x15PLOT_TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tMAIN_PLOT\x10\x01\x12\f\n" +
	"\bSUB_PLOT\x10\x02*]\n" +
	"\fLocationType\x12\x1d\n" +
	"\x19LOCATION_TYPE_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bHOSPITAL\x10\x01\x12\n" +
	"\n" +
	"\x06SHRINE\x10\x02\x12\b\n" +
	"\x04CITY\x10\x03\x12\n" +
	"\n" +
	"\x06SCHOOL\x10\x04*\xf1\x01\n" +
	"\vTriggerType\x12\x1c\n" +
	"\x18TRIGGER_TYPE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rON_GAME_SETUP\x10\x01\x12\x11\n" +
	"\rON_LOOP_START\x10\x02\x12\x10\n" +
	"\fON_DAY_START\x10\x03\x12\x12\n" +
	"\x0eON_PHASE_START\x10\x04\x12\x10\n" +
	"\fON_PHASE_END\x10\x05\x12\x11\n" +
	"\rON_GAME_EVENT\x10\x06\x12\x0e\n" +
	"\n" +
	"ON_PASSIVE\x10\a\x12\x11\n" +
	"\rON_GUESS_MADE\x10\b\x12\x0f\n" +
	"\vON_GAME_END\x10\t\x12\x0e\n" +
	"\n" +
	"ON_DAY_END\x10\n" +
	"\x12\x0f\n" +
	"\vON_LOOP_END\x10\v*\x8e\x04\n" +
	"\rGameEventType\x12\x1f\n" +
	"\x1bGAME_EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fCHARACTER_MOVED\x10\x01\x12\x15\n" +
	"\x11PARANOIA_ADJUSTED\x10\x02\x12\x15\n" +
	"\x11GOODWILL_ADJUSTED\x10\x03\x12\x15\n" +
	"\x11INTRIGUE_ADJUSTED\x10\x04\x12\x16\n" +
	"\x12INCIDENT_TRIGGERED\x10\x05\x12\x16\n" +
	"\x12INCIDENT_PREVENTED\x10\x06\x12\x11\n" +
	"\rROLE_REVEALED\x10\a\x12\x13\n" +
	"\x0fABILITY_GRANTED\x10\b\x12\x13\n" +
	"\x0fCHOICE_REQUIRED\x10\t\x12\f\n" +
	"\bLOOP_WIN\x10\n" +
	"\x12\r\n" +
	"\tLOOP_LOSS\x10\v\x12\x14\n" +
	"\x10FIRST_GUESS_MADE\x10\f\x12\x14\n" +
	"\x10FINAL_GUESS_MADE\x10\r\x12\x19\n" +
	"\x15GOODWILL_REFUSAL_TEST\x10\x0e\x12\r\n" +
	"\tLOOP_OVER\x10\x0f\x12\x10\n" +
	"\fDAY_ADVANCED\x10\x10\x12\x15\n" +
	"\x11TRAGEDY_TRIGGERED\x10\x11\x12\x0e\n" +
	"\n" +
	"LOOP_RESET\x10\x12\x12\x0f\n" +
	"\vTRAIT_ADDED\x10\x13\x12\x11\n" +
	"\rTRAIT_REMOVED\x10\x14\x12\x0f\n" +
	"\vCARD_PLAYED\x10\x15\x12\x11\n" +
	"\rCARD_REVEALED\x10\x16\x12\x0e\n" +
	"\n" +
	"GAME_ENDED\x10\x17\x12\x11\n" +
	"\rPLAYER_ACTION\x10\x18*\xdc\x01\n" +
	"\x10EndConditionType\x12\"\n" +
	"\x1eEND_CONDITION_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19PROTAGONIST_GUESS_SUCCESS\x10\x01\x12\x1a\n" +
	"\x16PROTAGONIST_GUESS_FAIL\x10\x02\x12\x15\n" +
	"\x11MAX_LOOPS_REACHED\x10\x03\x12\x1f\n" +
	"\x1bSPECIFIC_INCIDENT_TRIGGERED\x10\x04\x12\x1b\n" +
	"\x17ALL_INCIDENTS_PREVENTED\x10\x05\x12\x14\n" +
	"\x10CUSTOM_CONDITION\x10\x06*v\n" +
	"\n" +
	"ForbidType\x12\x1b\n" +
	"\x17FORBID_TYPE_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bMOVEMENT\x10\x01\x12\x13\n" +
	"\x0fPARANOIA_CHANGE\x10\x02\x12\x13\n" +
	"\x0fGOODWILL_CHANGE\x10\x03\x12\x13\n" +
	"\x0fINTRIGUE_CHANGE\x10\x04B&Z$tragedylooper/internal/game/proto/v1b\x06proto3"

var (
	file_v1_enums_proto_rawDescOnce sync.Once
	file_v1_enums_proto_rawDescData []byte
)

func file_v1_enums_proto_rawDescGZIP() []byte {
	file_v1_enums_proto_rawDescOnce.Do(func() {
		file_v1_enums_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_enums_proto_rawDesc), len(file_v1_enums_proto_rawDesc)))
	})
	return file_v1_enums_proto_rawDescData
}

var file_v1_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 13)
var file_v1_enums_proto_goTypes = []any{
	(PlayerRole)(0),       // 0: v1.PlayerRole
	(GamePhase)(0),        // 1: v1.GamePhase
	(CardType)(0),         // 2: v1.CardType
	(RoleType)(0),         // 3: v1.RoleType
	(IncidentType)(0),     // 4: v1.IncidentType
	(TragedySetType)(0),   // 5: v1.TragedySetType
	(ScriptDifficulty)(0), // 6: v1.ScriptDifficulty
	(PlotType)(0),         // 7: v1.PlotType
	(LocationType)(0),     // 8: v1.LocationType
	(TriggerType)(0),      // 9: v1.TriggerType
	(GameEventType)(0),    // 10: v1.GameEventType
	(EndConditionType)(0), // 11: v1.EndConditionType
	(ForbidType)(0),       // 12: v1.ForbidType
}
var file_v1_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_enums_proto_init() }
func file_v1_enums_proto_init() {
	if File_v1_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_enums_proto_rawDesc), len(file_v1_enums_proto_rawDesc)),
			NumEnums:      13,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_enums_proto_goTypes,
		DependencyIndexes: file_v1_enums_proto_depIdxs,
		EnumInfos:         file_v1_enums_proto_enumTypes,
	}.Build()
	File_v1_enums_proto = out.File
	file_v1_enums_proto_goTypes = nil
	file_v1_enums_proto_depIdxs = nil
}
