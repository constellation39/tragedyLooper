syntax = "proto3";

package tragedylooper.v1;

import "tragedylooper/v1/condition.proto"; // Import TargetSelector
import "tragedylooper/v1/enums.proto";

option go_package = "github.com/constellation39/tragedyLooper/pkg/proto/v1";

// Effect 定义了能力、卡牌或规则的具体行动。
message Effect {
  // 效果的类型。
  oneof effect_type {
    // 调整角色的属性。
    AdjustStatEffect adjust_stat = 1;
    // 将角色移动到不同的地点。
    MoveCharacterEffect move_character = 2;
    // 禁止角色执行某个动作。
    ForbidEffect forbid = 3;
    // 授予角色能力。
    GrantAbilityEffect grant_ability = 4;
    // 揭示角色的角色。
    RevealRoleEffect reveal_role = 5;
    // 改变角色的角色。
    ChangeRoleEffect change_role = 6;
    // 触发事件。
    TriggerIncidentEffect trigger_incident = 7;
    // 结束游戏。
    EndGameEffect end_game = 8;
    // 为角色添加特征。
    AddTraitEffect add_trait = 9;
    // 从角色中移除特征。
    RemoveTraitEffect remove_trait = 10;
    // 复合效果。
    CompoundEffect compound_effect = 11;
    // 条件效果。
    ConditionalEffect conditional_effect = 12;
  }
}

// ConditionalEffect 定义了只有在满足条件时才运行的效果。
message ConditionalEffect {
  // 要检查的条件。
  Condition condition = 1;
  // 如果条件为真，则执行的效果。
  Effect then_effect = 2;
  // 可选：如果条件为假时执行的效果。
  optional Effect else_effect = 3;
}

// CompoundEffect 定义了多个效果的组合。
message CompoundEffect {
  // 组合效果时使用的操作符。
  enum Operator {
    // 未指定的操作符。
    OPERATOR_UNSPECIFIED = 0;
    // 按顺序执行所有效果。
    OPERATOR_SEQUENCE = 1;
    // 玩家选择一个效果执行。
    OPERATOR_CHOOSE_ONE = 2;
  }
  // 组合效果的操作符。
  Operator operator = 1;
  // 子效果列表。
  repeated Effect sub_effects = 2;
}

// AdjustStatEffect 定义了调整角色属性的效果。
message AdjustStatEffect {
  // 目标角色。
  TargetSelector target = 1;
  // 要调整的属性类型。
  StatType stat_type = 2;
  // 调整属性的量（正数增加，负数减少）。
  int32 amount = 3;
}

// MoveCharacterEffect 定义了移动角色的效果。
message MoveCharacterEffect {
  // 目标角色。
  TargetSelector target = 1;
  // 目的地。
  LocationType destination = 2;
}

// ForbidEffect 定义了禁止动作的效果。
message ForbidEffect {
  // 目标角色。
  TargetSelector target = 1;
  // 要禁止的动作类型。
  enum ForbidType {
    // 未指定的禁止类型。
    FORBID_TYPE_UNSPECIFIED = 0;
    // 禁止移动。
    FORBID_TYPE_MOVEMENT = 1;
    // 禁止妄想变化。
    FORBID_TYPE_PARANOIA_CHANGE = 2;
    // 禁止善意变化。
    FORBID_TYPE_GOODWILL_CHANGE = 3;
    // 禁止诡计变化。
    FORBID_TYPE_INTRIGUE_CHANGE = 4;
  }
  // 要禁止的动作类型。
  ForbidType forbid_type = 2;
}

// GrantAbilityEffect 定义了授予能力的效果。
message GrantAbilityEffect {
  // 目标角色。
  TargetSelector target = 1;
  // 要授予的能力 ID。
  int32 ability_id = 2;
  // 该能力是否是临时的（例如，持续一天或一个循环）。
  bool is_temporary = 3;
}

// RevealRoleEffect 定义了揭示角色身份的效果。
message RevealRoleEffect {
  // 目标角色。
  TargetSelector target = 1;
}

// ChangeRoleEffect 定义了改变角色身份的效果。
message ChangeRoleEffect {
  // 目标角色。
  TargetSelector target = 1;
  // 新的角色。
  int32 new_role = 2;
}

// TriggerIncidentEffect 定义了触发事件的效果。
message TriggerIncidentEffect {
  // 要触发的事件 ID（引用 ScriptConfig 中的 IncidentConfig）。
  int32 incident_id = 1;
}

// EndGameEffect 定义了结束游戏的效果。
message EndGameEffect {
  // 获胜的玩家角色。
  PlayerRole winner = 1;
  // 游戏结束的原因。
  string reason = 2;
}

// AddTraitEffect 定义了为角色添加特征的效果。
message AddTraitEffect {
  // 目标角色。
  TargetSelector target = 1;
  // 要添加的特征。
  string trait = 2;
}

// RemoveTraitEffect 定义了从角色中移除特征的效果。
message RemoveTraitEffect {
  // 目标角色。
  TargetSelector target = 1;
  // 要移除的特征。
  string trait = 2;
}
