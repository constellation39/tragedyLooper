syntax = "proto3";

package tragedylooper.v1;

import "tragedylooper/v1/condition.proto";
import "tragedylooper/v1/effect.proto";
import "tragedylooper/v1/enums.proto";

option go_package = "github.com/constellation39/tragedyLooper/pkg/proto/v1";

// AbilityConfig 定义了角色能力的配置。
message AbilityConfig {
  // 能力的唯一标识符。
  int32 id = 1;
  // 能力的名称。
  string name = 2;
  // 能力的描述。
  string description = 3;
  // 能力的触发类型。
  TriggerType ability_type = 4 [json_name = "type"];
  // 可选：游戏事件触发器的过滤器。
  repeated GameEventType event_filters = 5;
  // 能力的效果。
  Effect effect = 6;
  // 该能力是否每循环只能使用一次。
  bool once_per_loop = 7;
  // 可以拒绝此能力的玩家角色。
  PlayerRole refusal_role = 8;
  // 该能力是否为被动能力。
  bool is_passive = 9;
  // 该能力是否为强制（不可拒绝）能力。
  bool is_mandatory = 10;
  // 能力的结算优先级。
  int32 priority = 11;
  // 使用能力必须满足的条件列表。
  repeated Condition conditions = 12;
  // 该能力是否需要做出选择。
  bool requires_choice = 13;
  // 使用能力所需的善意等级。
  int32 goodwill_rank = 14;
  // 该能力受限制的地点列表。
  repeated LocationType restricted_to_locations = 15 [json_name = "restricted_to_location"];
  // 该能力每循环可使用的次数。
  int32 times_per_loop = 16 [json_name = "times_per_loop"];
  // 该能力是否不受善意拒绝的影响。
  bool immune_to_goodwill_refusal = 17 [json_name = "immune_to_goodwill_refusal"];
}

// CompoundAbility 定义了多种能力的组合。
message CompoundAbility {
  // 组合能力时使用的操作符。
  enum Operator {
    // 未指定的操作符。
    OPERATOR_UNSPECIFIED = 0;
    // 与操作符。
    OPERATOR_AND = 1;
    // 或操作符。
    OPERATOR_OR = 2;
  }
  // 组合能力时使用的操作符。
  Operator operator = 1;
  // 要组合的子能力。
  repeated AbilityConfig sub_abilities = 2;
}

// Ability 定义了角色在运行时的能力。
message Ability {
  // 能力的配置。
  AbilityConfig config = 1;
  // 该能力是否在当前循环中使用过。
  bool used_this_loop = 2;
  // 拥有该能力的角色ID。
  int32 owner_character_id = 3;
}

