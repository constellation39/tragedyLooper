syntax = "proto3";

package v1;

import "v1/enums.proto";
import "v1/condition.proto"; // 引入TargetSelector

option go_package = "tragedylooper/internal/game/proto/v1";

// 效果，定义了能力、卡牌或规则的具体作用
message Effect {
  oneof effect_type {
    AdjustStatEffect adjust_stat = 1;            // 调整属性
    MoveCharacterEffect move_character = 2;      // 移动角色
    ForbidEffect forbid = 3;                     // 禁止行动
    GrantAbilityEffect grant_ability = 4;        // 授予能力
    RevealRoleEffect reveal_role = 5;            // 揭示身份
    ChangeRoleEffect change_role = 6;            // 改变身份
    TriggerIncidentEffect trigger_incident = 7;  // 触发事件
    EndGameEffect end_game = 8;                  // 结束游戏
    AddTraitEffect add_trait = 9;                // 添加特征
    RemoveTraitEffect remove_trait = 10;         // 移除特征
  }
}

// 调整属性效果
message AdjustStatEffect {
  TargetSelector target = 1;  // 目标角色
  StatCondition.StatType stat_type = 2; // 调整的属性类型
  int32 amount = 3;           // 调整量（正数增加，负数减少）
}

// 移动角色效果
message MoveCharacterEffect {
  TargetSelector target = 1;    // 目标角色
  LocationType destination = 2; // 目标地点
}

// 禁止效果
message ForbidEffect {
  TargetSelector target = 1; // 目标角色
  enum ForbidType {
    FORBID_TYPE_UNSPECIFIED = 0; // 未指定
    MOVEMENT = 1;                // 禁止移动
    PARANOIA_CHANGE = 2;         // 禁止妄想值变化
    GOODWILL_CHANGE = 3;         // 禁止好感值变化
    INTRIGUE_CHANGE = 4;         // 禁止阴谋值变化
  }
  ForbidType forbid_type = 2;  // 禁止的行动类型
}

// 授予能力效果
message GrantAbilityEffect {
  TargetSelector target = 1;  // 目标角色
  int32 ability_id = 2;       // 授予的能力ID
  bool is_temporary = 3;      // 是否是临时能力（例如，只持续一天或一循环）
}

// 揭示身份效果
message RevealRoleEffect {
  TargetSelector target = 1;  // 目标角色
}

// 改变身份效果
message ChangeRoleEffect {
  TargetSelector target = 1;  // 目标角色
  RoleType new_role = 2;      // 新的身份
}

// 触发事件效果
message TriggerIncidentEffect {
  int32 incident_id = 1; // 要触发的事件ID (引用ScriptConfig中的IncidentConfig)
}

// 结束游戏效果
message EndGameEffect {
  PlayerRole winner = 1;    // 宣布的胜利方
  string reason = 2;        // 游戏结束原因描述
}

// 添加特征效果
message AddTraitEffect {
  TargetSelector target = 1; // 目标角色
  string trait = 2;          // 要添加的特征
}

// 移除特征效果
message RemoveTraitEffect {
  TargetSelector target = 1; // 目标角色
  string trait = 2;          // 要移除的特征
}
