// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/game/player.proto

package game

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Player 表示一个连接的玩家（人类或 LLM）。
type Player struct {
	state              protoimpl.MessageState     `protogen:"open.v1"`
	Id                 string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                                                     // 唯一标识符
	Name               string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                                                                 // 玩家名称
	Role               PlayerRole                 `protobuf:"varint,3,opt,name=role,proto3,enum=game.PlayerRole" json:"role,omitempty"`                                                                                                           // 玩家角色（主谋或主角）
	IsLlm              bool                       `protobuf:"varint,4,opt,name=is_llm,json=isLlm,proto3" json:"is_llm,omitempty"`                                                                                                                 // 是否为LLM玩家
	Hand               []*Card                    `protobuf:"bytes,5,rep,name=hand,proto3" json:"hand,omitempty"`                                                                                                                                 // 玩家手牌
	DeductionKnowledge map[string]*structpb.Value `protobuf:"bytes,6,rep,name=deduction_knowledge,json=deductionKnowledge,proto3" json:"deduction_knowledge,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 主角的推理知识
	LlmSessionId       string                     `protobuf:"bytes,7,opt,name=llm_session_id,json=llmSessionId,proto3" json:"llm_session_id,omitempty"`                                                                                           // LLM玩家的会话ID
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_proto_game_player_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_player_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_proto_game_player_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetRole() PlayerRole {
	if x != nil {
		return x.Role
	}
	return PlayerRole_PLAYER_ROLE_UNSPECIFIED
}

func (x *Player) GetIsLlm() bool {
	if x != nil {
		return x.IsLlm
	}
	return false
}

func (x *Player) GetHand() []*Card {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *Player) GetDeductionKnowledge() map[string]*structpb.Value {
	if x != nil {
		return x.DeductionKnowledge
	}
	return nil
}

func (x *Player) GetLlmSessionId() string {
	if x != nil {
		return x.LlmSessionId
	}
	return ""
}

// PlayerView 表示特定玩家的游戏状态过滤视图。
type PlayerView struct {
	state              protoimpl.MessageState     `protogen:"open.v1"`
	GameId             string                     `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                                                                                                // 游戏唯一标识符
	ScriptId           string                     `protobuf:"bytes,2,opt,name=script_id,json=scriptId,proto3" json:"script_id,omitempty"`                                                                                                          // 剧本ID
	Characters         map[string]*Character      `protobuf:"bytes,3,rep,name=characters,proto3" json:"characters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                                            // 角色信息（隐藏身份已移除）
	Players            map[string]*Player         `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                                                  // 玩家信息（敏感信息已移除）
	CurrentDay         int32                      `protobuf:"varint,5,opt,name=current_day,json=currentDay,proto3" json:"current_day,omitempty"`                                                                                                   // 当前天数
	CurrentLoop        int32                      `protobuf:"varint,6,opt,name=current_loop,json=currentLoop,proto3" json:"current_loop,omitempty"`                                                                                                // 当前循环次数
	CurrentPhase       GamePhase                  `protobuf:"varint,7,opt,name=current_phase,json=currentPhase,proto3,enum=game.GamePhase" json:"current_phase,omitempty"`                                                                         // 当前游戏阶段
	ActiveTragedies    map[string]bool            `protobuf:"bytes,8,rep,name=active_tragedies,json=activeTragedies,proto3" json:"active_tragedies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`          // 活跃的悲剧（公开信息）
	PreventedTragedies map[string]bool            `protobuf:"bytes,9,rep,name=prevented_tragedies,json=preventedTragedies,proto3" json:"prevented_tragedies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 已阻止的悲剧（公开信息）
	YourHand           []*Card                    `protobuf:"bytes,10,rep,name=your_hand,json=yourHand,proto3" json:"your_hand,omitempty"`                                                                                                         // 你的手牌（仅对请求玩家可见）
	YourDeductions     map[string]*structpb.Value `protobuf:"bytes,11,rep,name=your_deductions,json=yourDeductions,proto3" json:"your_deductions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`             // 你的推理（仅对主角可见）
	PublicEvents       []*GameEvent               `protobuf:"bytes,12,rep,name=public_events,json=publicEvents,proto3" json:"public_events,omitempty"`                                                                                             // 公开事件
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PlayerView) Reset() {
	*x = PlayerView{}
	mi := &file_proto_game_player_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerView) ProtoMessage() {}

func (x *PlayerView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_game_player_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerView.ProtoReflect.Descriptor instead.
func (*PlayerView) Descriptor() ([]byte, []int) {
	return file_proto_game_player_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerView) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *PlayerView) GetScriptId() string {
	if x != nil {
		return x.ScriptId
	}
	return ""
}

func (x *PlayerView) GetCharacters() map[string]*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *PlayerView) GetPlayers() map[string]*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *PlayerView) GetCurrentDay() int32 {
	if x != nil {
		return x.CurrentDay
	}
	return 0
}

func (x *PlayerView) GetCurrentLoop() int32 {
	if x != nil {
		return x.CurrentLoop
	}
	return 0
}

func (x *PlayerView) GetCurrentPhase() GamePhase {
	if x != nil {
		return x.CurrentPhase
	}
	return GamePhase_GAME_PHASE_UNSPECIFIED
}

func (x *PlayerView) GetActiveTragedies() map[string]bool {
	if x != nil {
		return x.ActiveTragedies
	}
	return nil
}

func (x *PlayerView) GetPreventedTragedies() map[string]bool {
	if x != nil {
		return x.PreventedTragedies
	}
	return nil
}

func (x *PlayerView) GetYourHand() []*Card {
	if x != nil {
		return x.YourHand
	}
	return nil
}

func (x *PlayerView) GetYourDeductions() map[string]*structpb.Value {
	if x != nil {
		return x.YourDeductions
	}
	return nil
}

func (x *PlayerView) GetPublicEvents() []*GameEvent {
	if x != nil {
		return x.PublicEvents
	}
	return nil
}

var File_proto_game_player_proto protoreflect.FileDescriptor

const file_proto_game_player_proto_rawDesc = "" +
	"\n" +
	"\x17proto/game/player.proto\x12\x04game\x1a\x1cgoogle/protobuf/struct.proto\x1a\x15proto/game/card.proto\x1a\x1aproto/game/character.proto\x1a\x16proto/game/enums.proto\x1a\x16proto/game/event.proto\"\xe5\x02\n" +
	"\x06Player\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12$\n" +
	"\x04role\x18\x03 \x01(\x0e2\x10.game.PlayerRoleR\x04role\x12\x15\n" +
	"\x06is_llm\x18\x04 \x01(\bR\x05isLlm\x12\x1e\n" +
	"\x04hand\x18\x05 \x03(\v2\n" +
	".game.CardR\x04hand\x12U\n" +
	"\x13deduction_knowledge\x18\x06 \x03(\v2$.game.Player.DeductionKnowledgeEntryR\x12deductionKnowledge\x12$\n" +
	"\x0ellm_session_id\x18\a \x01(\tR\fllmSessionId\x1a]\n" +
	"\x17DeductionKnowledgeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\"\x92\b\n" +
	"\n" +
	"PlayerView\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\x1b\n" +
	"\tscript_id\x18\x02 \x01(\tR\bscriptId\x12@\n" +
	"\n" +
	"characters\x18\x03 \x03(\v2 .game.PlayerView.CharactersEntryR\n" +
	"characters\x127\n" +
	"\aplayers\x18\x04 \x03(\v2\x1d.game.PlayerView.PlayersEntryR\aplayers\x12\x1f\n" +
	"\vcurrent_day\x18\x05 \x01(\x05R\n" +
	"currentDay\x12!\n" +
	"\fcurrent_loop\x18\x06 \x01(\x05R\vcurrentLoop\x124\n" +
	"\rcurrent_phase\x18\a \x01(\x0e2\x0f.game.GamePhaseR\fcurrentPhase\x12P\n" +
	"\x10active_tragedies\x18\b \x03(\v2%.game.PlayerView.ActiveTragediesEntryR\x0factiveTragedies\x12Y\n" +
	"\x13prevented_tragedies\x18\t \x03(\v2(.game.PlayerView.PreventedTragediesEntryR\x12preventedTragedies\x12'\n" +
	"\tyour_hand\x18\n" +
	" \x03(\v2\n" +
	".game.CardR\byourHand\x12M\n" +
	"\x0fyour_deductions\x18\v \x03(\v2$.game.PlayerView.YourDeductionsEntryR\x0eyourDeductions\x124\n" +
	"\rpublic_events\x18\f \x03(\v2\x0f.game.GameEventR\fpublicEvents\x1aN\n" +
	"\x0fCharactersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\v2\x0f.game.CharacterR\x05value:\x028\x01\x1aH\n" +
	"\fPlayersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\"\n" +
	"\x05value\x18\x02 \x01(\v2\f.game.PlayerR\x05value:\x028\x01\x1aB\n" +
	"\x14ActiveTragediesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1aE\n" +
	"\x17PreventedTragediesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1aY\n" +
	"\x13YourDeductionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01B!Z\x1fgithub.com/user/repo/proto/gameb\x06proto3"

var (
	file_proto_game_player_proto_rawDescOnce sync.Once
	file_proto_game_player_proto_rawDescData []byte
)

func file_proto_game_player_proto_rawDescGZIP() []byte {
	file_proto_game_player_proto_rawDescOnce.Do(func() {
		file_proto_game_player_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_game_player_proto_rawDesc), len(file_proto_game_player_proto_rawDesc)))
	})
	return file_proto_game_player_proto_rawDescData
}

var file_proto_game_player_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_game_player_proto_goTypes = []any{
	(*Player)(nil),         // 0: game.Player
	(*PlayerView)(nil),     // 1: game.PlayerView
	nil,                    // 2: game.Player.DeductionKnowledgeEntry
	nil,                    // 3: game.PlayerView.CharactersEntry
	nil,                    // 4: game.PlayerView.PlayersEntry
	nil,                    // 5: game.PlayerView.ActiveTragediesEntry
	nil,                    // 6: game.PlayerView.PreventedTragediesEntry
	nil,                    // 7: game.PlayerView.YourDeductionsEntry
	(PlayerRole)(0),        // 8: game.PlayerRole
	(*Card)(nil),           // 9: game.Card
	(GamePhase)(0),         // 10: game.GamePhase
	(*GameEvent)(nil),      // 11: game.GameEvent
	(*structpb.Value)(nil), // 12: google.protobuf.Value
	(*Character)(nil),      // 13: game.Character
}
var file_proto_game_player_proto_depIdxs = []int32{
	8,  // 0: game.Player.role:type_name -> game.PlayerRole
	9,  // 1: game.Player.hand:type_name -> game.Card
	2,  // 2: game.Player.deduction_knowledge:type_name -> game.Player.DeductionKnowledgeEntry
	3,  // 3: game.PlayerView.characters:type_name -> game.PlayerView.CharactersEntry
	4,  // 4: game.PlayerView.players:type_name -> game.PlayerView.PlayersEntry
	10, // 5: game.PlayerView.current_phase:type_name -> game.GamePhase
	5,  // 6: game.PlayerView.active_tragedies:type_name -> game.PlayerView.ActiveTragediesEntry
	6,  // 7: game.PlayerView.prevented_tragedies:type_name -> game.PlayerView.PreventedTragediesEntry
	9,  // 8: game.PlayerView.your_hand:type_name -> game.Card
	7,  // 9: game.PlayerView.your_deductions:type_name -> game.PlayerView.YourDeductionsEntry
	11, // 10: game.PlayerView.public_events:type_name -> game.GameEvent
	12, // 11: game.Player.DeductionKnowledgeEntry.value:type_name -> google.protobuf.Value
	13, // 12: game.PlayerView.CharactersEntry.value:type_name -> game.Character
	0,  // 13: game.PlayerView.PlayersEntry.value:type_name -> game.Player
	12, // 14: game.PlayerView.YourDeductionsEntry.value:type_name -> google.protobuf.Value
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_game_player_proto_init() }
func file_proto_game_player_proto_init() {
	if File_proto_game_player_proto != nil {
		return
	}
	file_proto_game_card_proto_init()
	file_proto_game_character_proto_init()
	file_proto_game_enums_proto_init()
	file_proto_game_event_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_game_player_proto_rawDesc), len(file_proto_game_player_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_game_player_proto_goTypes,
		DependencyIndexes: file_proto_game_player_proto_depIdxs,
		MessageInfos:      file_proto_game_player_proto_msgTypes,
	}.Build()
	File_proto_game_player_proto = out.File
	file_proto_game_player_proto_goTypes = nil
	file_proto_game_player_proto_depIdxs = nil
}
