// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/event.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GameEvent 表示游戏中发生的事件。
type GameEvent struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Type    GameEventType          `protobuf:"varint,1,opt,name=type,proto3,enum=v1.GameEventType" json:"type,omitempty"` // 事件类型
	Payload *anypb.Any             `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`                  // 事件的具体负载
	// Types that are valid to be assigned to EventPayload:
	//
	//	*GameEvent_PlayerAction
	EventPayload  isGameEvent_EventPayload `protobuf_oneof:"event_payload"`
	Timestamp     *timestamppb.Timestamp   `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 事件发生的时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameEvent) Reset() {
	*x = GameEvent{}
	mi := &file_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent) ProtoMessage() {}

func (x *GameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent.ProtoReflect.Descriptor instead.
func (*GameEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *GameEvent) GetType() GameEventType {
	if x != nil {
		return x.Type
	}
	return GameEventType_GAME_EVENT_TYPE_UNSPECIFIED
}

func (x *GameEvent) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GameEvent) GetEventPayload() isGameEvent_EventPayload {
	if x != nil {
		return x.EventPayload
	}
	return nil
}

func (x *GameEvent) GetPlayerAction() *PlayerActionTakenEvent {
	if x != nil {
		if x, ok := x.EventPayload.(*GameEvent_PlayerAction); ok {
			return x.PlayerAction
		}
	}
	return nil
}

func (x *GameEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type isGameEvent_EventPayload interface {
	isGameEvent_EventPayload()
}

type GameEvent_PlayerAction struct {
	PlayerAction *PlayerActionTakenEvent `protobuf:"bytes,4,opt,name=player_action,json=playerAction,proto3,oneof"`
}

func (*GameEvent_PlayerAction) isGameEvent_EventPayload() {}

// 事件库，用于存储和管理游戏中的所有事件
type GameEventLib struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        map[int32]*anypb.Any   `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 事件ID到事件负载的映射
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameEventLib) Reset() {
	*x = GameEventLib{}
	mi := &file_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameEventLib) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEventLib) ProtoMessage() {}

func (x *GameEventLib) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEventLib.ProtoReflect.Descriptor instead.
func (*GameEventLib) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *GameEventLib) GetEvents() map[int32]*anypb.Any {
	if x != nil {
		return x.Events
	}
	return nil
}

// 角色移动事件
type CharacterMovedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`                      // 移动的角色ID
	NewLocation   LocationType           `protobuf:"varint,2,opt,name=new_location,json=newLocation,proto3,enum=v1.LocationType" json:"new_location,omitempty"` // 移动到的新地点
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterMovedEvent) Reset() {
	*x = CharacterMovedEvent{}
	mi := &file_v1_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterMovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterMovedEvent) ProtoMessage() {}

func (x *CharacterMovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterMovedEvent.ProtoReflect.Descriptor instead.
func (*CharacterMovedEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *CharacterMovedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *CharacterMovedEvent) GetNewLocation() LocationType {
	if x != nil {
		return x.NewLocation
	}
	return LocationType_LOCATION_TYPE_UNSPECIFIED
}

// 妄想值调整事件
type ParanoiaAdjustedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // 角色ID
	Amount        int32                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`                              // 调整量
	NewParanoia   int32                  `protobuf:"varint,3,opt,name=new_paranoia,json=newParanoia,proto3" json:"new_paranoia,omitempty"` // 调整后的新妄想值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParanoiaAdjustedEvent) Reset() {
	*x = ParanoiaAdjustedEvent{}
	mi := &file_v1_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParanoiaAdjustedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParanoiaAdjustedEvent) ProtoMessage() {}

func (x *ParanoiaAdjustedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParanoiaAdjustedEvent.ProtoReflect.Descriptor instead.
func (*ParanoiaAdjustedEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *ParanoiaAdjustedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *ParanoiaAdjustedEvent) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ParanoiaAdjustedEvent) GetNewParanoia() int32 {
	if x != nil {
		return x.NewParanoia
	}
	return 0
}

// 好感值调整事件
type GoodwillAdjustedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // 角色ID
	Amount        int32                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`                              // 调整量
	NewGoodwill   int32                  `protobuf:"varint,3,opt,name=new_goodwill,json=newGoodwill,proto3" json:"new_goodwill,omitempty"` // 调整后的新好感值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoodwillAdjustedEvent) Reset() {
	*x = GoodwillAdjustedEvent{}
	mi := &file_v1_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoodwillAdjustedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodwillAdjustedEvent) ProtoMessage() {}

func (x *GoodwillAdjustedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodwillAdjustedEvent.ProtoReflect.Descriptor instead.
func (*GoodwillAdjustedEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{4}
}

func (x *GoodwillAdjustedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *GoodwillAdjustedEvent) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *GoodwillAdjustedEvent) GetNewGoodwill() int32 {
	if x != nil {
		return x.NewGoodwill
	}
	return 0
}

// 阴谋值调整事件
type IntrigueAdjustedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // 角色ID
	Amount        int32                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`                              // 调整量
	NewIntrigue   int32                  `protobuf:"varint,3,opt,name=new_intrigue,json=newIntrigue,proto3" json:"new_intrigue,omitempty"` // 调整后的新阴谋值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntrigueAdjustedEvent) Reset() {
	*x = IntrigueAdjustedEvent{}
	mi := &file_v1_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntrigueAdjustedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrigueAdjustedEvent) ProtoMessage() {}

func (x *IntrigueAdjustedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrigueAdjustedEvent.ProtoReflect.Descriptor instead.
func (*IntrigueAdjustedEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{5}
}

func (x *IntrigueAdjustedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *IntrigueAdjustedEvent) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *IntrigueAdjustedEvent) GetNewIntrigue() int32 {
	if x != nil {
		return x.NewIntrigue
	}
	return 0
}

// 循环失败事件
type LoopLossEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IncidentType  IncidentType           `protobuf:"varint,1,opt,name=incident_type,json=incidentType,proto3,enum=v1.IncidentType" json:"incident_type,omitempty"` // 导致失败的事件类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoopLossEvent) Reset() {
	*x = LoopLossEvent{}
	mi := &file_v1_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoopLossEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoopLossEvent) ProtoMessage() {}

func (x *LoopLossEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoopLossEvent.ProtoReflect.Descriptor instead.
func (*LoopLossEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{6}
}

func (x *LoopLossEvent) GetIncidentType() IncidentType {
	if x != nil {
		return x.IncidentType
	}
	return IncidentType_INCIDENT_TYPE_UNSPECIFIED
}

// 循环胜利事件
type LoopWinEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoopWinEvent) Reset() {
	*x = LoopWinEvent{}
	mi := &file_v1_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoopWinEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoopWinEvent) ProtoMessage() {}

func (x *LoopWinEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoopWinEvent.ProtoReflect.Descriptor instead.
func (*LoopWinEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{7}
}

// 能力使用事件
type AbilityUsedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // 使用能力的角色ID
	AbilityName   string                 `protobuf:"bytes,2,opt,name=ability_name,json=abilityName,proto3" json:"ability_name,omitempty"`  // 使用的能力名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbilityUsedEvent) Reset() {
	*x = AbilityUsedEvent{}
	mi := &file_v1_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbilityUsedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbilityUsedEvent) ProtoMessage() {}

func (x *AbilityUsedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbilityUsedEvent.ProtoReflect.Descriptor instead.
func (*AbilityUsedEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{8}
}

func (x *AbilityUsedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *AbilityUsedEvent) GetAbilityName() string {
	if x != nil {
		return x.AbilityName
	}
	return ""
}

// 天数推进事件
type DayAdvancedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Day           int32                  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`   // 新的天数
	Loop          int32                  `protobuf:"varint,2,opt,name=loop,proto3" json:"loop,omitempty"` // 当前的循环数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DayAdvancedEvent) Reset() {
	*x = DayAdvancedEvent{}
	mi := &file_v1_event_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DayAdvancedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayAdvancedEvent) ProtoMessage() {}

func (x *DayAdvancedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayAdvancedEvent.ProtoReflect.Descriptor instead.
func (*DayAdvancedEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{9}
}

func (x *DayAdvancedEvent) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *DayAdvancedEvent) GetLoop() int32 {
	if x != nil {
		return x.Loop
	}
	return 0
}

// 卡牌打出事件
type CardPlayedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Card          *Card                  `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CardPlayedEvent) Reset() {
	*x = CardPlayedEvent{}
	mi := &file_v1_event_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardPlayedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardPlayedEvent) ProtoMessage() {}

func (x *CardPlayedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardPlayedEvent.ProtoReflect.Descriptor instead.
func (*CardPlayedEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{10}
}

func (x *CardPlayedEvent) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *CardPlayedEvent) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

// 卡牌揭示事件
type CardRevealedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         map[int32]*Card        `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // player_id -> card
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CardRevealedEvent) Reset() {
	*x = CardRevealedEvent{}
	mi := &file_v1_event_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardRevealedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRevealedEvent) ProtoMessage() {}

func (x *CardRevealedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRevealedEvent.ProtoReflect.Descriptor instead.
func (*CardRevealedEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{11}
}

func (x *CardRevealedEvent) GetCards() map[int32]*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

// 循环重置事件
type LoopResetEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LoopNumber    int32                  `protobuf:"varint,1,opt,name=loop_number,json=loopNumber,proto3" json:"loop_number,omitempty"` // 新的循环数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoopResetEvent) Reset() {
	*x = LoopResetEvent{}
	mi := &file_v1_event_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoopResetEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoopResetEvent) ProtoMessage() {}

func (x *LoopResetEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoopResetEvent.ProtoReflect.Descriptor instead.
func (*LoopResetEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{12}
}

func (x *LoopResetEvent) GetLoopNumber() int32 {
	if x != nil {
		return x.LoopNumber
	}
	return 0
}

// 游戏结束事件
type GameOverEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Winner        PlayerRole             `protobuf:"varint,1,opt,name=winner,proto3,enum=v1.PlayerRole" json:"winner,omitempty"` // 胜利的玩家角色
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameOverEvent) Reset() {
	*x = GameOverEvent{}
	mi := &file_v1_event_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameOverEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOverEvent) ProtoMessage() {}

func (x *GameOverEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOverEvent.ProtoReflect.Descriptor instead.
func (*GameOverEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{13}
}

func (x *GameOverEvent) GetWinner() PlayerRole {
	if x != nil {
		return x.Winner
	}
	return PlayerRole_PLAYER_ROLE_UNSPECIFIED
}

// Choice 表示玩家可以做出的选择。
type Choice struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                   // 唯一ID，例如 "target_char_5" 或 "effect_choice_0"
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"` // 选项的描述
	// Types that are valid to be assigned to ChoiceType:
	//
	//	*Choice_TargetCharacterId
	//	*Choice_EffectOptionIndex
	ChoiceType    isChoice_ChoiceType `protobuf_oneof:"choice_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Choice) Reset() {
	*x = Choice{}
	mi := &file_v1_event_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Choice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Choice) ProtoMessage() {}

func (x *Choice) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Choice.ProtoReflect.Descriptor instead.
func (*Choice) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{14}
}

func (x *Choice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Choice) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Choice) GetChoiceType() isChoice_ChoiceType {
	if x != nil {
		return x.ChoiceType
	}
	return nil
}

func (x *Choice) GetTargetCharacterId() int32 {
	if x != nil {
		if x, ok := x.ChoiceType.(*Choice_TargetCharacterId); ok {
			return x.TargetCharacterId
		}
	}
	return 0
}

func (x *Choice) GetEffectOptionIndex() int32 {
	if x != nil {
		if x, ok := x.ChoiceType.(*Choice_EffectOptionIndex); ok {
			return x.EffectOptionIndex
		}
	}
	return 0
}

type isChoice_ChoiceType interface {
	isChoice_ChoiceType()
}

type Choice_TargetCharacterId struct {
	TargetCharacterId int32 `protobuf:"varint,3,opt,name=target_character_id,json=targetCharacterId,proto3,oneof"` // 用于目标选择
}

type Choice_EffectOptionIndex struct {
	EffectOptionIndex int32 `protobuf:"varint,4,opt,name=effect_option_index,json=effectOptionIndex,proto3,oneof"` // 用于复合效果中的效果选择
}

func (*Choice_TargetCharacterId) isChoice_ChoiceType() {}

func (*Choice_EffectOptionIndex) isChoice_ChoiceType() {}

// 需要玩家做出选择的事件
type ChoiceRequiredEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 这可能需要更复杂的结构，具体取决于选择
	Choices       []*Choice `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"` // 提供给玩家的选项列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChoiceRequiredEvent) Reset() {
	*x = ChoiceRequiredEvent{}
	mi := &file_v1_event_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChoiceRequiredEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceRequiredEvent) ProtoMessage() {}

func (x *ChoiceRequiredEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceRequiredEvent.ProtoReflect.Descriptor instead.
func (*ChoiceRequiredEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{15}
}

func (x *ChoiceRequiredEvent) GetChoices() []*Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

// 事件触发事件
type IncidentTriggeredEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Incident      *Incident              `protobuf:"bytes,1,opt,name=incident,proto3" json:"incident,omitempty"` // 被触发的事件详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncidentTriggeredEvent) Reset() {
	*x = IncidentTriggeredEvent{}
	mi := &file_v1_event_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncidentTriggeredEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncidentTriggeredEvent) ProtoMessage() {}

func (x *IncidentTriggeredEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncidentTriggeredEvent.ProtoReflect.Descriptor instead.
func (*IncidentTriggeredEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{16}
}

func (x *IncidentTriggeredEvent) GetIncident() *Incident {
	if x != nil {
		return x.Incident
	}
	return nil
}

// 悲剧触发事件
type TragedyTriggeredEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TragedyType   IncidentType           `protobuf:"varint,1,opt,name=tragedy_type,json=tragedyType,proto3,enum=v1.IncidentType" json:"tragedy_type,omitempty"` // 被触发的悲剧类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TragedyTriggeredEvent) Reset() {
	*x = TragedyTriggeredEvent{}
	mi := &file_v1_event_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TragedyTriggeredEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TragedyTriggeredEvent) ProtoMessage() {}

func (x *TragedyTriggeredEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TragedyTriggeredEvent.ProtoReflect.Descriptor instead.
func (*TragedyTriggeredEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{17}
}

func (x *TragedyTriggeredEvent) GetTragedyType() IncidentType {
	if x != nil {
		return x.TragedyType
	}
	return IncidentType_INCIDENT_TYPE_UNSPECIFIED
}

// 特性添加事件
type TraitAddedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Trait         string                 `protobuf:"bytes,2,opt,name=trait,proto3" json:"trait,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraitAddedEvent) Reset() {
	*x = TraitAddedEvent{}
	mi := &file_v1_event_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraitAddedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraitAddedEvent) ProtoMessage() {}

func (x *TraitAddedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraitAddedEvent.ProtoReflect.Descriptor instead.
func (*TraitAddedEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{18}
}

func (x *TraitAddedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *TraitAddedEvent) GetTrait() string {
	if x != nil {
		return x.Trait
	}
	return ""
}

// 特性移除事件
type TraitRemovedEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Trait         string                 `protobuf:"bytes,2,opt,name=trait,proto3" json:"trait,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraitRemovedEvent) Reset() {
	*x = TraitRemovedEvent{}
	mi := &file_v1_event_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraitRemovedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraitRemovedEvent) ProtoMessage() {}

func (x *TraitRemovedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraitRemovedEvent.ProtoReflect.Descriptor instead.
func (*TraitRemovedEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{19}
}

func (x *TraitRemovedEvent) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *TraitRemovedEvent) GetTrait() string {
	if x != nil {
		return x.Trait
	}
	return ""
}

type PlayerActionTakenEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Action        *PlayerActionPayload   `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerActionTakenEvent) Reset() {
	*x = PlayerActionTakenEvent{}
	mi := &file_v1_event_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerActionTakenEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerActionTakenEvent) ProtoMessage() {}

func (x *PlayerActionTakenEvent) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerActionTakenEvent.ProtoReflect.Descriptor instead.
func (*PlayerActionTakenEvent) Descriptor() ([]byte, []int) {
	return file_v1_event_proto_rawDescGZIP(), []int{20}
}

func (x *PlayerActionTakenEvent) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerActionTakenEvent) GetAction() *PlayerActionPayload {
	if x != nil {
		return x.Action
	}
	return nil
}

var File_v1_event_proto protoreflect.FileDescriptor

const file_v1_event_proto_rawDesc = "" +
	"\n" +
	"\x0ev1/event.proto\x12\x02v1\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\rv1/card.proto\x1a\x0ev1/enums.proto\x1a\x11v1/incident.proto\x1a\x10v1/payload.proto\"\xf0\x01\n" +
	"\tGameEvent\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.v1.GameEventTypeR\x04type\x12.\n" +
	"\apayload\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\apayload\x12A\n" +
	"\rplayer_action\x18\x04 \x01(\v2\x1a.v1.PlayerActionTakenEventH\x00R\fplayerAction\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestampB\x0f\n" +
	"\revent_payload\"\x95\x01\n" +
	"\fGameEventLib\x124\n" +
	"\x06events\x18\x01 \x03(\v2\x1c.v1.GameEventLib.EventsEntryR\x06events\x1aO\n" +
	"\vEventsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x05value:\x028\x01\"m\n" +
	"\x13CharacterMovedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x123\n" +
	"\fnew_location\x18\x02 \x01(\x0e2\x10.v1.LocationTypeR\vnewLocation\"u\n" +
	"\x15ParanoiaAdjustedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x05R\x06amount\x12!\n" +
	"\fnew_paranoia\x18\x03 \x01(\x05R\vnewParanoia\"u\n" +
	"\x15GoodwillAdjustedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x05R\x06amount\x12!\n" +
	"\fnew_goodwill\x18\x03 \x01(\x05R\vnewGoodwill\"u\n" +
	"\x15IntrigueAdjustedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x05R\x06amount\x12!\n" +
	"\fnew_intrigue\x18\x03 \x01(\x05R\vnewIntrigue\"F\n" +
	"\rLoopLossEvent\x125\n" +
	"\rincident_type\x18\x01 \x01(\x0e2\x10.v1.IncidentTypeR\fincidentType\"\x0e\n" +
	"\fLoopWinEvent\"X\n" +
	"\x10AbilityUsedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x12!\n" +
	"\fability_name\x18\x02 \x01(\tR\vabilityName\"8\n" +
	"\x10DayAdvancedEvent\x12\x10\n" +
	"\x03day\x18\x01 \x01(\x05R\x03day\x12\x12\n" +
	"\x04loop\x18\x02 \x01(\x05R\x04loop\"L\n" +
	"\x0fCardPlayedEvent\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\x12\x1c\n" +
	"\x04card\x18\x02 \x01(\v2\b.v1.CardR\x04card\"\x8f\x01\n" +
	"\x11CardRevealedEvent\x126\n" +
	"\x05cards\x18\x01 \x03(\v2 .v1.CardRevealedEvent.CardsEntryR\x05cards\x1aB\n" +
	"\n" +
	"CardsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x1e\n" +
	"\x05value\x18\x02 \x01(\v2\b.v1.CardR\x05value:\x028\x01\"1\n" +
	"\x0eLoopResetEvent\x12\x1f\n" +
	"\vloop_number\x18\x01 \x01(\x05R\n" +
	"loopNumber\"7\n" +
	"\rGameOverEvent\x12&\n" +
	"\x06winner\x18\x01 \x01(\x0e2\x0e.v1.PlayerRoleR\x06winner\"\xad\x01\n" +
	"\x06Choice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x120\n" +
	"\x13target_character_id\x18\x03 \x01(\x05H\x00R\x11targetCharacterId\x120\n" +
	"\x13effect_option_index\x18\x04 \x01(\x05H\x00R\x11effectOptionIndexB\r\n" +
	"\vchoice_type\";\n" +
	"\x13ChoiceRequiredEvent\x12$\n" +
	"\achoices\x18\x01 \x03(\v2\n" +
	".v1.ChoiceR\achoices\"B\n" +
	"\x16IncidentTriggeredEvent\x12(\n" +
	"\bincident\x18\x01 \x01(\v2\f.v1.IncidentR\bincident\"L\n" +
	"\x15TragedyTriggeredEvent\x123\n" +
	"\ftragedy_type\x18\x01 \x01(\x0e2\x10.v1.IncidentTypeR\vtragedyType\"J\n" +
	"\x0fTraitAddedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x12\x14\n" +
	"\x05trait\x18\x02 \x01(\tR\x05trait\"L\n" +
	"\x11TraitRemovedEvent\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x12\x14\n" +
	"\x05trait\x18\x02 \x01(\tR\x05trait\"f\n" +
	"\x16PlayerActionTakenEvent\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\x12/\n" +
	"\x06action\x18\x02 \x01(\v2\x17.v1.PlayerActionPayloadR\x06actionB&Z$tragedylooper/internal/game/proto/v1b\x06proto3"

var (
	file_v1_event_proto_rawDescOnce sync.Once
	file_v1_event_proto_rawDescData []byte
)

func file_v1_event_proto_rawDescGZIP() []byte {
	file_v1_event_proto_rawDescOnce.Do(func() {
		file_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_event_proto_rawDesc), len(file_v1_event_proto_rawDesc)))
	})
	return file_v1_event_proto_rawDescData
}

var file_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_v1_event_proto_goTypes = []any{
	(*GameEvent)(nil),              // 0: v1.GameEvent
	(*GameEventLib)(nil),           // 1: v1.GameEventLib
	(*CharacterMovedEvent)(nil),    // 2: v1.CharacterMovedEvent
	(*ParanoiaAdjustedEvent)(nil),  // 3: v1.ParanoiaAdjustedEvent
	(*GoodwillAdjustedEvent)(nil),  // 4: v1.GoodwillAdjustedEvent
	(*IntrigueAdjustedEvent)(nil),  // 5: v1.IntrigueAdjustedEvent
	(*LoopLossEvent)(nil),          // 6: v1.LoopLossEvent
	(*LoopWinEvent)(nil),           // 7: v1.LoopWinEvent
	(*AbilityUsedEvent)(nil),       // 8: v1.AbilityUsedEvent
	(*DayAdvancedEvent)(nil),       // 9: v1.DayAdvancedEvent
	(*CardPlayedEvent)(nil),        // 10: v1.CardPlayedEvent
	(*CardRevealedEvent)(nil),      // 11: v1.CardRevealedEvent
	(*LoopResetEvent)(nil),         // 12: v1.LoopResetEvent
	(*GameOverEvent)(nil),          // 13: v1.GameOverEvent
	(*Choice)(nil),                 // 14: v1.Choice
	(*ChoiceRequiredEvent)(nil),    // 15: v1.ChoiceRequiredEvent
	(*IncidentTriggeredEvent)(nil), // 16: v1.IncidentTriggeredEvent
	(*TragedyTriggeredEvent)(nil),  // 17: v1.TragedyTriggeredEvent
	(*TraitAddedEvent)(nil),        // 18: v1.TraitAddedEvent
	(*TraitRemovedEvent)(nil),      // 19: v1.TraitRemovedEvent
	(*PlayerActionTakenEvent)(nil), // 20: v1.PlayerActionTakenEvent
	nil,                            // 21: v1.GameEventLib.EventsEntry
	nil,                            // 22: v1.CardRevealedEvent.CardsEntry
	(GameEventType)(0),             // 23: v1.GameEventType
	(*anypb.Any)(nil),              // 24: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),  // 25: google.protobuf.Timestamp
	(LocationType)(0),              // 26: v1.LocationType
	(IncidentType)(0),              // 27: v1.IncidentType
	(*Card)(nil),                   // 28: v1.Card
	(PlayerRole)(0),                // 29: v1.PlayerRole
	(*Incident)(nil),               // 30: v1.Incident
	(*PlayerActionPayload)(nil),    // 31: v1.PlayerActionPayload
}
var file_v1_event_proto_depIdxs = []int32{
	23, // 0: v1.GameEvent.type:type_name -> v1.GameEventType
	24, // 1: v1.GameEvent.payload:type_name -> google.protobuf.Any
	20, // 2: v1.GameEvent.player_action:type_name -> v1.PlayerActionTakenEvent
	25, // 3: v1.GameEvent.timestamp:type_name -> google.protobuf.Timestamp
	21, // 4: v1.GameEventLib.events:type_name -> v1.GameEventLib.EventsEntry
	26, // 5: v1.CharacterMovedEvent.new_location:type_name -> v1.LocationType
	27, // 6: v1.LoopLossEvent.incident_type:type_name -> v1.IncidentType
	28, // 7: v1.CardPlayedEvent.card:type_name -> v1.Card
	22, // 8: v1.CardRevealedEvent.cards:type_name -> v1.CardRevealedEvent.CardsEntry
	29, // 9: v1.GameOverEvent.winner:type_name -> v1.PlayerRole
	14, // 10: v1.ChoiceRequiredEvent.choices:type_name -> v1.Choice
	30, // 11: v1.IncidentTriggeredEvent.incident:type_name -> v1.Incident
	27, // 12: v1.TragedyTriggeredEvent.tragedy_type:type_name -> v1.IncidentType
	31, // 13: v1.PlayerActionTakenEvent.action:type_name -> v1.PlayerActionPayload
	24, // 14: v1.GameEventLib.EventsEntry.value:type_name -> google.protobuf.Any
	28, // 15: v1.CardRevealedEvent.CardsEntry.value:type_name -> v1.Card
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_v1_event_proto_init() }
func file_v1_event_proto_init() {
	if File_v1_event_proto != nil {
		return
	}
	file_v1_card_proto_init()
	file_v1_enums_proto_init()
	file_v1_incident_proto_init()
	file_v1_payload_proto_init()
	file_v1_event_proto_msgTypes[0].OneofWrappers = []any{
		(*GameEvent_PlayerAction)(nil),
	}
	file_v1_event_proto_msgTypes[14].OneofWrappers = []any{
		(*Choice_TargetCharacterId)(nil),
		(*Choice_EffectOptionIndex)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_event_proto_rawDesc), len(file_v1_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_event_proto_goTypes,
		DependencyIndexes: file_v1_event_proto_depIdxs,
		MessageInfos:      file_v1_event_proto_msgTypes,
	}.Build()
	File_v1_event_proto = out.File
	file_v1_event_proto_goTypes = nil
	file_v1_event_proto_depIdxs = nil
}
