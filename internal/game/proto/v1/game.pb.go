// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/game.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 游戏当前状态
type GameState struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	GameId                  string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                                                                                                                   // 游戏唯一ID
	Script                  *Script                `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`                                                                                                                                                 // 当前游戏的剧本配置
	Characters              map[int32]*Character   `protobuf:"bytes,3,rep,name=characters,proto3" json:"characters,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                                                              // 所有角色当前状态的映射，键为 character_id
	Players                 map[int32]*Player      `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                                                                    // 所有玩家的映射，键为 player_id
	CurrentDay              int32                  `protobuf:"varint,5,opt,name=current_day,json=currentDay,proto3" json:"current_day,omitempty"`                                                                                                                      // 当前天数
	CurrentLoop             int32                  `protobuf:"varint,6,opt,name=current_loop,json=currentLoop,proto3" json:"current_loop,omitempty"`                                                                                                                   // 当前循环数
	CurrentPhase            GamePhase              `protobuf:"varint,7,opt,name=current_phase,json=currentPhase,proto3,enum=v1.GamePhase" json:"current_phase,omitempty"`                                                                                              // 当前游戏阶段
	ActiveTragedies         map[int32]bool         `protobuf:"bytes,8,rep,name=active_tragedies,json=activeTragedies,proto3" json:"active_tragedies,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`                            // 当前循环中已激活（满足条件）的悲剧，键为 TragedyType
	PreventedTragedies      map[int32]bool         `protobuf:"bytes,9,rep,name=prevented_tragedies,json=preventedTragedies,proto3" json:"prevented_tragedies,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`                   // 当前循环中已被阻止的悲剧，键为 TragedyType
	PlayedCardsThisDay      map[int32]*Card        `protobuf:"bytes,10,rep,name=played_cards_this_day,json=playedCardsThisDay,proto3" json:"played_cards_this_day,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`               // 本日已打出的卡牌列表, key is player_id
	PlayedCardsThisLoop     map[int32]bool         `protobuf:"bytes,11,rep,name=played_cards_this_loop,json=playedCardsThisLoop,proto3" json:"played_cards_this_loop,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`           // 本循环已打出的卡牌ID列表
	LastUpdateTime          int64                  `protobuf:"varint,12,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`                                                                                                       // 最后更新时间戳 (Unix timestamp)
	DayEvents               []*GameEvent           `protobuf:"bytes,13,rep,name=day_events,json=dayEvents,proto3" json:"day_events,omitempty"`                                                                                                                         // 本日发生的事件日志
	LoopEvents              []*GameEvent           `protobuf:"bytes,14,rep,name=loop_events,json=loopEvents,proto3" json:"loop_events,omitempty"`                                                                                                                      // 本循环发生的事件日志
	CharacterParanoiaLimits map[int32]int32        `protobuf:"bytes,15,rep,name=character_paranoia_limits,json=characterParanoiaLimits,proto3" json:"character_paranoia_limits,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 每个角色的妄想上限映射（新增）
	CharacterGoodwillLimits map[int32]int32        `protobuf:"bytes,16,rep,name=character_goodwill_limits,json=characterGoodwillLimits,proto3" json:"character_goodwill_limits,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 每个角色的好感度上限映射（新增）
	CharacterIntrigueLimits map[int32]int32        `protobuf:"bytes,17,rep,name=character_intrigue_limits,json=characterIntrigueLimits,proto3" json:"character_intrigue_limits,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 每个角色的阴谋上限映射（新增）
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GameState) Reset() {
	*x = GameState{}
	mi := &file_v1_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_v1_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_v1_game_proto_rawDescGZIP(), []int{0}
}

func (x *GameState) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GameState) GetScript() *Script {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *GameState) GetCharacters() map[int32]*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *GameState) GetPlayers() map[int32]*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameState) GetCurrentDay() int32 {
	if x != nil {
		return x.CurrentDay
	}
	return 0
}

func (x *GameState) GetCurrentLoop() int32 {
	if x != nil {
		return x.CurrentLoop
	}
	return 0
}

func (x *GameState) GetCurrentPhase() GamePhase {
	if x != nil {
		return x.CurrentPhase
	}
	return GamePhase_GAME_PHASE_UNSPECIFIED
}

func (x *GameState) GetActiveTragedies() map[int32]bool {
	if x != nil {
		return x.ActiveTragedies
	}
	return nil
}

func (x *GameState) GetPreventedTragedies() map[int32]bool {
	if x != nil {
		return x.PreventedTragedies
	}
	return nil
}

func (x *GameState) GetPlayedCardsThisDay() map[int32]*Card {
	if x != nil {
		return x.PlayedCardsThisDay
	}
	return nil
}

func (x *GameState) GetPlayedCardsThisLoop() map[int32]bool {
	if x != nil {
		return x.PlayedCardsThisLoop
	}
	return nil
}

func (x *GameState) GetLastUpdateTime() int64 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

func (x *GameState) GetDayEvents() []*GameEvent {
	if x != nil {
		return x.DayEvents
	}
	return nil
}

func (x *GameState) GetLoopEvents() []*GameEvent {
	if x != nil {
		return x.LoopEvents
	}
	return nil
}

func (x *GameState) GetCharacterParanoiaLimits() map[int32]int32 {
	if x != nil {
		return x.CharacterParanoiaLimits
	}
	return nil
}

func (x *GameState) GetCharacterGoodwillLimits() map[int32]int32 {
	if x != nil {
		return x.CharacterGoodwillLimits
	}
	return nil
}

func (x *GameState) GetCharacterIntrigueLimits() map[int32]int32 {
	if x != nil {
		return x.CharacterIntrigueLimits
	}
	return nil
}

var File_v1_game_proto protoreflect.FileDescriptor

const file_v1_game_proto_rawDesc = "" +
	"\n" +
	"\rv1/game.proto\x12\x02v1\x1a\x12v1/character.proto\x1a\x0ev1/enums.proto\x1a\x0ev1/event.proto\x1a\x0fv1/player.proto\x1a\rv1/card.proto\x1a\x0fv1/script.proto\"\xf1\r\n" +
	"\tGameState\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\"\n" +
	"\x06script\x18\x02 \x01(\v2\n" +
	".v1.ScriptR\x06script\x12=\n" +
	"\n" +
	"characters\x18\x03 \x03(\v2\x1d.v1.GameState.CharactersEntryR\n" +
	"characters\x124\n" +
	"\aplayers\x18\x04 \x03(\v2\x1a.v1.GameState.PlayersEntryR\aplayers\x12\x1f\n" +
	"\vcurrent_day\x18\x05 \x01(\x05R\n" +
	"currentDay\x12!\n" +
	"\fcurrent_loop\x18\x06 \x01(\x05R\vcurrentLoop\x122\n" +
	"\rcurrent_phase\x18\a \x01(\x0e2\r.v1.GamePhaseR\fcurrentPhase\x12M\n" +
	"\x10active_tragedies\x18\b \x03(\v2\".v1.GameState.ActiveTragediesEntryR\x0factiveTragedies\x12V\n" +
	"\x13prevented_tragedies\x18\t \x03(\v2%.v1.GameState.PreventedTragediesEntryR\x12preventedTragedies\x12X\n" +
	"\x15played_cards_this_day\x18\n" +
	" \x03(\v2%.v1.GameState.PlayedCardsThisDayEntryR\x12playedCardsThisDay\x12[\n" +
	"\x16played_cards_this_loop\x18\v \x03(\v2&.v1.GameState.PlayedCardsThisLoopEntryR\x13playedCardsThisLoop\x12(\n" +
	"\x10last_update_time\x18\f \x01(\x03R\x0elastUpdateTime\x12,\n" +
	"\n" +
	"day_events\x18\r \x03(\v2\r.v1.GameEventR\tdayEvents\x12.\n" +
	"\vloop_events\x18\x0e \x03(\v2\r.v1.GameEventR\n" +
	"loopEvents\x12f\n" +
	"\x19character_paranoia_limits\x18\x0f \x03(\v2*.v1.GameState.CharacterParanoiaLimitsEntryR\x17characterParanoiaLimits\x12f\n" +
	"\x19character_goodwill_limits\x18\x10 \x03(\v2*.v1.GameState.CharacterGoodwillLimitsEntryR\x17characterGoodwillLimits\x12f\n" +
	"\x19character_intrigue_limits\x18\x11 \x03(\v2*.v1.GameState.CharacterIntrigueLimitsEntryR\x17characterIntrigueLimits\x1aL\n" +
	"\x0fCharactersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12#\n" +
	"\x05value\x18\x02 \x01(\v2\r.v1.CharacterR\x05value:\x028\x01\x1aF\n" +
	"\fPlayersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12 \n" +
	"\x05value\x18\x02 \x01(\v2\n" +
	".v1.PlayerR\x05value:\x028\x01\x1aB\n" +
	"\x14ActiveTragediesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1aE\n" +
	"\x17PreventedTragediesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1aO\n" +
	"\x17PlayedCardsThisDayEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x1e\n" +
	"\x05value\x18\x02 \x01(\v2\b.v1.CardR\x05value:\x028\x01\x1aF\n" +
	"\x18PlayedCardsThisLoopEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1aJ\n" +
	"\x1cCharacterParanoiaLimitsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aJ\n" +
	"\x1cCharacterGoodwillLimitsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aJ\n" +
	"\x1cCharacterIntrigueLimitsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01B#Z!tragedylooper/internal/game/v1;v1b\x06proto3"

var (
	file_v1_game_proto_rawDescOnce sync.Once
	file_v1_game_proto_rawDescData []byte
)

func file_v1_game_proto_rawDescGZIP() []byte {
	file_v1_game_proto_rawDescOnce.Do(func() {
		file_v1_game_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_game_proto_rawDesc), len(file_v1_game_proto_rawDesc)))
	})
	return file_v1_game_proto_rawDescData
}

var file_v1_game_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_v1_game_proto_goTypes = []any{
	(*GameState)(nil), // 0: v1.GameState
	nil,               // 1: v1.GameState.CharactersEntry
	nil,               // 2: v1.GameState.PlayersEntry
	nil,               // 3: v1.GameState.ActiveTragediesEntry
	nil,               // 4: v1.GameState.PreventedTragediesEntry
	nil,               // 5: v1.GameState.PlayedCardsThisDayEntry
	nil,               // 6: v1.GameState.PlayedCardsThisLoopEntry
	nil,               // 7: v1.GameState.CharacterParanoiaLimitsEntry
	nil,               // 8: v1.GameState.CharacterGoodwillLimitsEntry
	nil,               // 9: v1.GameState.CharacterIntrigueLimitsEntry
	(*Script)(nil),    // 10: v1.Script
	(GamePhase)(0),    // 11: v1.GamePhase
	(*GameEvent)(nil), // 12: v1.GameEvent
	(*Character)(nil), // 13: v1.Character
	(*Player)(nil),    // 14: v1.Player
	(*Card)(nil),      // 15: v1.Card
}
var file_v1_game_proto_depIdxs = []int32{
	10, // 0: v1.GameState.script:type_name -> v1.Script
	1,  // 1: v1.GameState.characters:type_name -> v1.GameState.CharactersEntry
	2,  // 2: v1.GameState.players:type_name -> v1.GameState.PlayersEntry
	11, // 3: v1.GameState.current_phase:type_name -> v1.GamePhase
	3,  // 4: v1.GameState.active_tragedies:type_name -> v1.GameState.ActiveTragediesEntry
	4,  // 5: v1.GameState.prevented_tragedies:type_name -> v1.GameState.PreventedTragediesEntry
	5,  // 6: v1.GameState.played_cards_this_day:type_name -> v1.GameState.PlayedCardsThisDayEntry
	6,  // 7: v1.GameState.played_cards_this_loop:type_name -> v1.GameState.PlayedCardsThisLoopEntry
	12, // 8: v1.GameState.day_events:type_name -> v1.GameEvent
	12, // 9: v1.GameState.loop_events:type_name -> v1.GameEvent
	7,  // 10: v1.GameState.character_paranoia_limits:type_name -> v1.GameState.CharacterParanoiaLimitsEntry
	8,  // 11: v1.GameState.character_goodwill_limits:type_name -> v1.GameState.CharacterGoodwillLimitsEntry
	9,  // 12: v1.GameState.character_intrigue_limits:type_name -> v1.GameState.CharacterIntrigueLimitsEntry
	13, // 13: v1.GameState.CharactersEntry.value:type_name -> v1.Character
	14, // 14: v1.GameState.PlayersEntry.value:type_name -> v1.Player
	15, // 15: v1.GameState.PlayedCardsThisDayEntry.value:type_name -> v1.Card
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_v1_game_proto_init() }
func file_v1_game_proto_init() {
	if File_v1_game_proto != nil {
		return
	}
	file_v1_character_proto_init()
	file_v1_enums_proto_init()
	file_v1_event_proto_init()
	file_v1_player_proto_init()
	file_v1_card_proto_init()
	file_v1_script_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_game_proto_rawDesc), len(file_v1_game_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_game_proto_goTypes,
		DependencyIndexes: file_v1_game_proto_depIdxs,
		MessageInfos:      file_v1_game_proto_msgTypes,
	}.Build()
	File_v1_game_proto = out.File
	file_v1_game_proto_goTypes = nil
	file_v1_game_proto_depIdxs = nil
}
